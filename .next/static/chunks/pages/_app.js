/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/globals.css":
/*!**********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/globals.css ***!
  \**********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* === BASE STYLES === */\\r\\n* { box-sizing: border-box; }\\r\\nhtml { height: 100%; }\\r\\nbody { min-height: 100%; }\\r\\n#__next { min-height: 100vh; position: relative; z-index: 0; }\\r\\n\\r\\n:root{\\r\\n  --bg: #0a0f19;\\r\\n  --panel: rgba(20,28,46,0.90);\\r\\n  --card: rgba(255,255,255,0.06);\\r\\n  --border: rgba(255,255,255,0.12);\\r\\n  --text: #e9eef7;\\r\\n  --muted: rgba(233,238,247,.75);\\r\\n  --brand: #7bc7ff;\\r\\n  --accent: #b7a3ff;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  margin:0;\\r\\n  font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, \\\"Noto Sans\\\", sans-serif;\\r\\n  color:var(--text);\\r\\n  background: transparent;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n/* Fixed background */\\r\\nbody::before{\\r\\n  content: '';\\r\\n  position: fixed;\\r\\n  top: 0; left: 0; right: 0; bottom: 0;\\r\\n  z-index: -2;\\r\\n  background: linear-gradient(135deg, #0a0f19 0%, #162745 25%, #11243d 50%, #0f1e3a 75%, #0a0f19 100%);\\r\\n}\\r\\n\\r\\n.container{ min-height:100vh; width: 100%; padding: 0; margin: 0; }\\r\\n\\r\\n.hero{\\r\\n  width: 100%; max-width: none; min-height: 100vh; position: relative;\\r\\n  padding: 20px 16px; border-radius: 0; background: transparent;\\r\\n  border: none; box-shadow: none; overflow-x: hidden;\\r\\n}\\r\\n\\r\\n/* === TOPBAR === */\\r\\n.topbar {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-between;\\r\\n  margin-bottom: 24px;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.topbar-left {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 12px;\\r\\n}\\r\\n\\r\\n.menu-button {\\r\\n  width: 40px; height: 40px; border: none;\\r\\n  background: var(--card); color: var(--text);\\r\\n  border-radius: 12px; display: flex; align-items: center; justify-content: center;\\r\\n  cursor: pointer; transition: all 0.2s ease; font-size: 16px;\\r\\n  border: 1px solid var(--border);\\r\\n}\\r\\n\\r\\n.menu-button:hover {\\r\\n  background: rgba(255, 255, 255, 0.08);\\r\\n  color: var(--brand);\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.avatar {\\r\\n  width: 40px; height: 40px; border-radius: 12px;\\r\\n  object-fit: cover; border: 2px solid var(--border);\\r\\n}\\r\\n\\r\\n.hello { display: flex; flex-direction: column; gap: 2px; }\\r\\n.hello-hi { font-size: 16px; font-weight: 700; color: var(--text); line-height: 1.2; }\\r\\n.hello-sub { font-size: 13px; color: var(--muted); line-height: 1.2; }\\r\\n\\r\\n/* === GRID === */\\r\\n.grid {\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\\r\\n  grid-gap: 20px;\\r\\n  gap: 20px;\\r\\n  margin-top: 32px;\\r\\n}\\r\\n\\r\\n/* === TILES === */\\r\\n.tile {\\r\\n  background: var(--panel);\\r\\n  border: 1px solid var(--border);\\r\\n  border-radius: 24px;\\r\\n  padding: 28px;\\r\\n  text-decoration: none;\\r\\n  color: var(--text);\\r\\n  transition: all 0.4s ease;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n  -webkit-backdrop-filter: blur(30px);\\r\\n          backdrop-filter: blur(30px);\\r\\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4), 0 8px 32px rgba(0, 0, 0, 0.3);\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 20px;\\r\\n}\\r\\n\\r\\n.tile:hover {\\r\\n  transform: translateY(-6px) scale(1.02);\\r\\n  box-shadow: 0 25px 80px rgba(0, 0, 0, 0.5), 0 12px 40px rgba(123, 199, 255, 0.2);\\r\\n  border-color: var(--brand);\\r\\n}\\r\\n\\r\\n.tile-icon {\\r\\n  font-size: 36px; position: relative; z-index: 2;\\r\\n  filter: drop-shadow(0 4px 12px rgba(0, 0, 0, 0.4));\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.tile:hover .tile-icon {\\r\\n  transform: scale(1.1) rotate(5deg);\\r\\n}\\r\\n\\r\\n.tile-head {\\r\\n  display: flex; align-items: center; justify-content: space-between;\\r\\n  gap: 12px; position: relative; z-index: 2;\\r\\n}\\r\\n\\r\\n.tile-title {\\r\\n  font-size: 22px; font-weight: 900; color: var(--text); margin: 0;\\r\\n  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.tile-badge {\\r\\n  background: linear-gradient(90deg, #ff6b6b, #ff8e8e);\\r\\n  color: white; font-size: 11px; font-weight: 700;\\r\\n  padding: 4px 8px; border-radius: 8px; text-transform: uppercase;\\r\\n  animation: pulse 2s ease-in-out infinite;\\r\\n}\\r\\n\\r\\n@keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: 0.8; } }\\r\\n\\r\\n.tile-desc {\\r\\n  font-size: 15px; color: var(--muted); line-height: 1.6;\\r\\n  position: relative; z-index: 2; margin: 0;\\r\\n}\\r\\n\\r\\n.tile-list {\\r\\n  list-style: none; padding: 0; margin: 0; position: relative; z-index: 2;\\r\\n}\\r\\n\\r\\n.tile-list li {\\r\\n  font-size: 14px; color: var(--muted); line-height: 1.6; margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n/* Tile colors */\\r\\n.tile-auction {\\r\\n  background: linear-gradient(135deg, rgba(255, 107, 107, 0.15) 0%, rgba(255, 142, 142, 0.08) 100%);\\r\\n  border: 1px solid rgba(255, 107, 107, 0.2);\\r\\n}\\r\\n\\r\\n.tile-gifts {\\r\\n  background: linear-gradient(135deg, rgba(123, 199, 255, 0.15) 0%, rgba(123, 199, 255, 0.08) 100%);\\r\\n  border: 1px solid rgba(123, 199, 255, 0.2);\\r\\n}\\r\\n\\r\\n.tile-plans {\\r\\n  background: linear-gradient(135deg, rgba(183, 163, 255, 0.15) 0%, rgba(183, 163, 255, 0.08) 100%);\\r\\n  border: 1px solid rgba(183, 163, 255, 0.2);\\r\\n}\\r\\n\\r\\n.tile-orders {\\r\\n  background: linear-gradient(135deg, rgba(34, 197, 94, 0.15) 0%, rgba(34, 197, 94, 0.08) 100%);\\r\\n  border: 1px solid rgba(34, 197, 94, 0.2);\\r\\n}\\r\\n\\r\\n.tile-create {\\r\\n  background: linear-gradient(135deg, rgba(255, 193, 7, 0.15) 0%, rgba(255, 193, 7, 0.08) 100%);\\r\\n  border: 1px solid rgba(255, 193, 7, 0.2);\\r\\n}\\r\\n\\r\\n/* === ANNOUNCEMENTS === */\\r\\n.announcements-container { margin-top: 32px; }\\r\\n\\r\\n.announcements-header {\\r\\n  display: flex; align-items: center; justify-content: space-between;\\r\\n  margin-bottom: 20px; padding: 0 4px;\\r\\n}\\r\\n\\r\\n.announcements-title {\\r\\n  font-size: 18px; font-weight: 800; color: var(--text);\\r\\n  display: flex; align-items: center; gap: 10px;\\r\\n}\\r\\n\\r\\n.announcements-counter {\\r\\n  font-size: 12px; color: var(--brand);\\r\\n  background: linear-gradient(135deg, rgba(123, 199, 255, 0.15), rgba(183, 163, 255, 0.15));\\r\\n  padding: 6px 12px; border-radius: 16px;\\r\\n  border: 1px solid rgba(123, 199, 255, 0.3);\\r\\n  font-weight: 700; -webkit-backdrop-filter: blur(10px); backdrop-filter: blur(10px);\\r\\n}\\r\\n\\r\\n.announcements-slider {\\r\\n  position: relative; background: var(--panel);\\r\\n  border: 1px solid var(--border); border-radius: 24px;\\r\\n  overflow: hidden; -webkit-backdrop-filter: blur(30px); backdrop-filter: blur(30px);\\r\\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4), 0 8px 32px rgba(123, 199, 255, 0.1);\\r\\n  height: 280px; touch-action: pan-x;\\r\\n}\\r\\n\\r\\n.announcements-wrapper { position: relative; width: 100%; height: 100%; }\\r\\n\\r\\n.announcement-card {\\r\\n  position: absolute; top: 0; left: 0; width: 100%; height: 100%;\\r\\n  padding: 40px 32px; display: flex; flex-direction: column;\\r\\n  justify-content: center; text-align: center;\\r\\n  transition: all 0.5s ease; cursor: pointer;\\r\\n  background: linear-gradient(135deg, var(--type-color, rgba(123, 199, 255, 0.1)) 0%, transparent 100%);\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n.announcement-card.active {\\r\\n  transform: translateX(0%) scale(1) !important;\\r\\n  opacity: 1 !important; z-index: 10 !important;\\r\\n}\\r\\n\\r\\n.announcement-content { position: relative; z-index: 2; }\\r\\n\\r\\n.announcement-type-badge {\\r\\n  display: inline-block; font-size: 10px; font-weight: 700;\\r\\n  text-transform: uppercase; padding: 4px 8px; border-radius: 8px;\\r\\n  background: rgba(255, 255, 255, 0.1); color: var(--text);\\r\\n  margin-bottom: 12px; letter-spacing: 0.5px;\\r\\n}\\r\\n\\r\\n.announcement-title {\\r\\n  font-size: 24px; font-weight: 900; color: var(--text);\\r\\n  margin: 0 0 20px 0; line-height: 1.2;\\r\\n  display: flex; align-items: center; justify-content: center; gap: 12px;\\r\\n  text-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\\r\\n  position: relative; z-index: 3;\\r\\n}\\r\\n\\r\\n.announcement-text {\\r\\n  font-size: 16px; color: var(--muted); line-height: 1.6;\\r\\n  margin: 0 0 24px 0; max-width: 400px;\\r\\n  margin-left: auto; margin-right: auto;\\r\\n  position: relative; z-index: 3;\\r\\n  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.announcements-dots {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  gap: 12px;\\r\\n  padding: 20px 24px;\\r\\n  background: linear-gradient(135deg, var(--card) 0%, rgba(255, 255, 255, 0.02) 100%);\\r\\n  border-top: 1px solid var(--border);\\r\\n}\\r\\n\\r\\n.announcement-dot {\\r\\n  width: 12px;\\r\\n  height: 12px;\\r\\n  border-radius: 50%;\\r\\n  border: none;\\r\\n  background: rgba(255, 255, 255, 0.2);\\r\\n  cursor: pointer;\\r\\n  transition: all 0.3s ease;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.announcement-dot::before {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  background: linear-gradient(135deg, var(--brand), var(--accent));\\r\\n  border-radius: 50%;\\r\\n  opacity: 0;\\r\\n  transition: opacity 0.3s ease;\\r\\n}\\r\\n\\r\\n.announcement-dot:hover {\\r\\n  transform: scale(1.2);\\r\\n  background: rgba(255, 255, 255, 0.3);\\r\\n}\\r\\n\\r\\n.announcement-dot.active {\\r\\n  background: transparent;\\r\\n  transform: scale(1.3);\\r\\n  box-shadow: 0 0 0 2px rgba(123, 199, 255, 0.3);\\r\\n}\\r\\n\\r\\n.announcement-dot.active::before {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n/* === SIDEBAR === */\\r\\n.sidebar-overlay {\\r\\n  position: fixed; top: 0; left: 0; right: 0; bottom: 0;\\r\\n  background: rgba(0, 0, 0, 0.8); -webkit-backdrop-filter: blur(12px); backdrop-filter: blur(12px);\\r\\n  z-index: 1000; display: flex; align-items: center; justify-content: flex-start;\\r\\n  opacity: 0; visibility: hidden; transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.sidebar-overlay.open { opacity: 1; visibility: visible; }\\r\\n\\r\\n.sidebar {\\r\\n  background: var(--panel); border-right: 1px solid var(--border);\\r\\n  -webkit-backdrop-filter: blur(30px);\\r\\n          backdrop-filter: blur(30px); width: 320px; height: 100vh;\\r\\n  overflow-y: auto; position: relative; transform: translateX(-100%);\\r\\n  transition: all 0.3s ease; box-shadow: 0 0 50px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.sidebar.open { transform: translateX(0); }\\r\\n\\r\\n.sidebar-header {\\r\\n  display: flex; align-items: center; justify-content: space-between;\\r\\n  padding: 20px 24px; border-bottom: 1px solid var(--border);\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky; top: 0; background: var(--panel); z-index: 10;\\r\\n}\\r\\n\\r\\n.sidebar-user {\\r\\n  display: flex; align-items: center; gap: 12px; flex: 1 1;\\r\\n}\\r\\n\\r\\n.sidebar-avatar {\\r\\n  width: 48px; height: 48px; border-radius: 16px;\\r\\n  object-fit: cover; border: 2px solid var(--border);\\r\\n}\\r\\n\\r\\n.sidebar-avatar-placeholder {\\r\\n  width: 48px; height: 48px; border-radius: 16px;\\r\\n  background: linear-gradient(135deg, var(--brand), var(--accent));\\r\\n  display: flex; align-items: center; justify-content: center;\\r\\n  font-size: 20px; font-weight: 700; color: white;\\r\\n  border: 2px solid var(--border);\\r\\n}\\r\\n\\r\\n.sidebar-user-info { flex: 1 1; min-width: 0; }\\r\\n\\r\\n.sidebar-user-name {\\r\\n  font-size: 16px; font-weight: 700; color: var(--text);\\r\\n  margin-bottom: 2px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.sidebar-user-handle {\\r\\n  font-size: 14px; color: var(--muted);\\r\\n  white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.sidebar-close {\\r\\n  width: 36px; height: 36px; border: none;\\r\\n  background: rgba(255, 255, 255, 0.1); color: var(--muted);\\r\\n  border-radius: 12px; display: flex; align-items: center; justify-content: center;\\r\\n  cursor: pointer; transition: all 0.2s ease; font-size: 16px;\\r\\n}\\r\\n\\r\\n.sidebar-close:hover {\\r\\n  background: rgba(255, 255, 255, 0.15);\\r\\n  color: var(--text); transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.sidebar-wallet { padding: 20px 24px; border-bottom: 1px solid var(--border); }\\r\\n\\r\\n.wallet-card {\\r\\n  background: var(--card); border: 1px solid var(--border);\\r\\n  border-radius: 16px; padding: 16px; display: flex;\\r\\n  align-items: center; gap: 12px; cursor: pointer;\\r\\n  transition: all 0.2s ease; position: relative; overflow: hidden;\\r\\n}\\r\\n\\r\\n.wallet-card:hover {\\r\\n  background: rgba(255, 255, 255, 0.05); border-color: var(--brand);\\r\\n  transform: translateY(-1px); box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\\r\\n}\\r\\n\\r\\n.wallet-icon { font-size: 24px; position: relative; z-index: 2; }\\r\\n.wallet-info { flex: 1 1; position: relative; z-index: 2; }\\r\\n.wallet-title { font-size: 14px; font-weight: 600; color: var(--text); margin-bottom: 2px; }\\r\\n.wallet-balance { font-size: 18px; font-weight: 700; color: var(--brand); }\\r\\n.wallet-arrow { color: var(--muted); font-size: 16px; position: relative; z-index: 2; }\\r\\n\\r\\n.sidebar-content { padding: 20px 0; }\\r\\n.sidebar-section { margin-bottom: 32px; }\\r\\n\\r\\n.sidebar-section-title {\\r\\n  font-size: 12px; font-weight: 700; color: var(--muted);\\r\\n  text-transform: uppercase; letter-spacing: 0.5px;\\r\\n  margin-bottom: 12px; padding: 0 24px;\\r\\n}\\r\\n\\r\\n.sidebar-item {\\r\\n  display: flex; align-items: center; gap: 12px;\\r\\n  padding: 12px 24px; color: var(--text); text-decoration: none;\\r\\n  transition: all 0.2s ease; position: relative;\\r\\n}\\r\\n\\r\\n.sidebar-item:hover { background: rgba(255, 255, 255, 0.05); color: var(--brand); }\\r\\n.sidebar-item-icon { font-size: 18px; width: 20px; text-align: center; }\\r\\n\\r\\n.sidebar-footer {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky; bottom: 0; background: var(--panel);\\r\\n  border-top: 1px solid var(--border); padding: 20px 24px;\\r\\n}\\r\\n\\r\\n.sidebar-app-info { text-align: center; }\\r\\n.sidebar-app-name { font-size: 14px; font-weight: 700; color: var(--text); margin-bottom: 2px; }\\r\\n.sidebar-app-version { font-size: 12px; color: var(--muted); }\\r\\n\\r\\n/* === WALLET MENU === */\\r\\n.wallet-overlay {\\r\\n  position: fixed; top: 0; left: 0; right: 0; bottom: 0;\\r\\n  background: rgba(0, 0, 0, 0.8); -webkit-backdrop-filter: blur(12px); backdrop-filter: blur(12px);\\r\\n  z-index: 1000; display: flex; align-items: center; justify-content: center;\\r\\n  opacity: 0; visibility: hidden; transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.wallet-overlay.open { opacity: 1; visibility: visible; }\\r\\n\\r\\n.wallet-menu {\\r\\n  background: var(--panel); border-radius: 24px; border: 1px solid var(--border);\\r\\n  box-shadow: 0 24px 80px rgba(0, 0, 0, 0.6); -webkit-backdrop-filter: blur(30px); backdrop-filter: blur(30px);\\r\\n  width: 100%; max-width: 420px; max-height: 90vh; overflow-y: auto;\\r\\n  position: relative; transform: translateY(20px) scale(0.95);\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.wallet-menu.open { transform: translateY(0) scale(1); }\\r\\n\\r\\n.wallet-header {\\r\\n  display: flex; align-items: center; padding: 20px 24px;\\r\\n  border-bottom: 1px solid var(--border); position: -webkit-sticky; position: sticky;\\r\\n  top: 0; background: var(--panel); z-index: 10;\\r\\n}\\r\\n\\r\\n.wallet-back {\\r\\n  width: 36px; height: 36px; border: none;\\r\\n  background: rgba(255, 255, 255, 0.1); color: var(--text);\\r\\n  border-radius: 12px; display: flex; align-items: center; justify-content: center;\\r\\n  cursor: pointer; transition: all 0.2s ease; font-size: 18px; margin-right: 12px;\\r\\n}\\r\\n\\r\\n.wallet-back:hover { background: rgba(255, 255, 255, 0.15); transform: scale(1.05); }\\r\\n\\r\\n.wallet-header-title { font-size: 18px; font-weight: 700; color: var(--text); flex: 1 1; }\\r\\n.wallet-header-spacer { width: 36px; }\\r\\n\\r\\n.wallet-balance-section { padding: 24px; }\\r\\n\\r\\n.balance-card {\\r\\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\r\\n  border-radius: 20px; padding: 24px; display: flex;\\r\\n  align-items: center; gap: 16px; position: relative; overflow: hidden;\\r\\n}\\r\\n\\r\\n.balance-icon { font-size: 32px; filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3)); }\\r\\n.balance-info { flex: 1 1; color: white; }\\r\\n.balance-label { font-size: 14px; font-weight: 600; opacity: 0.9; margin-bottom: 4px; }\\r\\n.balance-amount { font-size: 28px; font-weight: 800; margin-bottom: 4px; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3); }\\r\\n.balance-subtitle { font-size: 12px; opacity: 0.8; }\\r\\n\\r\\n.wallet-actions {\\r\\n  display: grid; grid-template-columns: repeat(3, 1fr);\\r\\n  grid-gap: 12px;\\r\\n  gap: 12px; padding: 0 24px 24px;\\r\\n}\\r\\n\\r\\n.action-button {\\r\\n  background: var(--card); border: 1px solid var(--border);\\r\\n  border-radius: 16px; padding: 16px 12px; display: flex;\\r\\n  flex-direction: column; align-items: center; gap: 8px;\\r\\n  cursor: pointer; transition: all 0.2s ease; color: var(--text);\\r\\n}\\r\\n\\r\\n.action-button:hover {\\r\\n  background: rgba(255, 255, 255, 0.05); border-color: var(--brand);\\r\\n  transform: translateY(-2px); box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\\r\\n}\\r\\n\\r\\n.action-icon { font-size: 20px; }\\r\\n.action-button span { font-size: 12px; font-weight: 600; text-align: center; }\\r\\n\\r\\n.wallet-content { padding: 0 24px 24px; }\\r\\n.transactions-section { margin-bottom: 32px; }\\r\\n\\r\\n.section-title {\\r\\n  font-size: 16px; font-weight: 700; color: var(--text);\\r\\n  margin-bottom: 16px; display: flex; align-items: center; gap: 8px;\\r\\n}\\r\\n\\r\\n.transaction-list {\\r\\n  background: var(--card); border: 1px solid var(--border);\\r\\n  border-radius: 16px; overflow: hidden;\\r\\n}\\r\\n\\r\\n.transaction-item {\\r\\n  display: flex; align-items: center; padding: 16px;\\r\\n  border-bottom: 1px solid var(--border); transition: background 0.2s ease;\\r\\n}\\r\\n\\r\\n.transaction-item:last-child { border-bottom: none; }\\r\\n.transaction-item:hover { background: rgba(255, 255, 255, 0.02); }\\r\\n\\r\\n.transaction-icon {\\r\\n  width: 40px; height: 40px; border-radius: 12px;\\r\\n  display: flex; align-items: center; justify-content: center;\\r\\n  font-size: 18px; margin-right: 12px;\\r\\n}\\r\\n\\r\\n.transaction-icon.income { background: rgba(34, 197, 94, 0.1); color: #22c55e; }\\r\\n.transaction-icon.expense { background: rgba(239, 68, 68, 0.1); color: #ef4444; }\\r\\n\\r\\n.transaction-info { flex: 1 1; }\\r\\n.transaction-title { font-size: 14px; font-weight: 600; color: var(--text); margin-bottom: 2px; }\\r\\n.transaction-date { font-size: 12px; color: var(--muted); }\\r\\n.transaction-amount { font-size: 14px; font-weight: 700; }\\r\\n.transaction-amount.income { color: #22c55e; }\\r\\n.transaction-amount.expense { color: #ef4444; }\\r\\n\\r\\n.transactions-loading {\\r\\n  text-align: center; padding: 40px 20px; color: var(--muted);\\r\\n}\\r\\n\\r\\n.transactions-loading .loading-spinner {\\r\\n  font-size: 24px; margin-bottom: 12px; animation: spin 1s linear infinite;\\r\\n}\\r\\n\\r\\n@keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }\\r\\n\\r\\n.transactions-empty {\\r\\n  text-align: center; padding: 40px 20px; color: var(--muted);\\r\\n}\\r\\n\\r\\n.empty-icon { font-size: 32px; margin-bottom: 12px; }\\r\\n.empty-text { font-size: 16px; font-weight: 600; color: var(--text); margin-bottom: 8px; }\\r\\n.empty-hint { font-size: 12px; color: var(--muted); line-height: 1.4; }\\r\\n\\r\\n.show-all-button {\\r\\n  width: 100%; background: transparent; border: 1px solid var(--border);\\r\\n  color: var(--muted); padding: 12px; border-radius: 12px;\\r\\n  font-size: 14px; font-weight: 600; cursor: pointer;\\r\\n  transition: all 0.2s ease; margin-top: 12px;\\r\\n}\\r\\n\\r\\n.show-all-button:hover {\\r\\n  background: rgba(255, 255, 255, 0.05); color: var(--text); border-color: var(--brand);\\r\\n}\\r\\n\\r\\n.payment-methods-section { margin-bottom: 24px; }\\r\\n\\r\\n.payment-method {\\r\\n  display: flex; align-items: center; padding: 16px;\\r\\n  background: var(--card); border: 1px solid var(--border);\\r\\n  border-radius: 16px; margin-bottom: 12px; cursor: pointer;\\r\\n  transition: all 0.2s ease;\\r\\n}\\r\\n\\r\\n.payment-method:hover {\\r\\n  background: rgba(255, 255, 255, 0.05); border-color: var(--brand);\\r\\n  transform: translateY(-1px);\\r\\n}\\r\\n\\r\\n.payment-icon {\\r\\n  width: 40px; height: 40px; border-radius: 12px;\\r\\n  background: rgba(123, 199, 255, 0.1); display: flex;\\r\\n  align-items: center; justify-content: center;\\r\\n  font-size: 18px; margin-right: 12px;\\r\\n}\\r\\n\\r\\n.payment-info { flex: 1 1; }\\r\\n.payment-name { font-size: 14px; font-weight: 600; color: var(--text); margin-bottom: 2px; }\\r\\n.payment-desc { font-size: 12px; color: var(--muted); }\\r\\n.payment-arrow { color: var(--muted); font-size: 16px; }\\r\\n\\r\\n/* === BUTTONS === */\\r\\n.row{ display:flex; flex-wrap:wrap; gap:12px; margin-top:22px; }\\r\\n.btn{\\r\\n  display:inline-flex; align-items:center; gap:10px;\\r\\n  padding:12px 20px; border-radius:12px; font-weight:600; font-size:15px;\\r\\n  text-decoration:none; transition:all 0.2s ease; border:none; cursor:pointer;\\r\\n}\\r\\n.btn:disabled{ opacity:.5; cursor:not-allowed; }\\r\\n.btn-primary{\\r\\n  background: linear-gradient(135deg, var(--brand), var(--accent));\\r\\n  color:#fff; box-shadow:0 6px 20px rgba(125,200,255,.3);\\r\\n}\\r\\n.btn-primary:hover:not(:disabled){\\r\\n  transform:translateY(-2px); box-shadow:0 12px 35px rgba(125,200,255,.4);\\r\\n}\\r\\n.btn-ghost{\\r\\n  background:var(--card); color:var(--text); border:1px solid var(--border);\\r\\n}\\r\\n.btn-ghost:hover{ background:rgba(255,255,255,.08); color:var(--brand); }\\r\\n\\r\\n/* === TYPOGRAPHY === */\\r\\n.h1{ margin:8px 0 10px; font-size: clamp(28px, 5.8vw, 44px); line-height:1.1; font-weight:900; }\\r\\n.lead{ color:var(--muted); font-size:16px; max-width:55ch; }\\r\\n.brand{ display:inline-flex; align-items:center; gap:10px; font-weight:800; color:var(--muted); margin-bottom:10px; }\\r\\n.badge{ display:inline-flex; align-items:center; gap:8px; padding:6px 10px; font-size:12px; font-weight:700; color:#0b1220; border-radius:999px; background: linear-gradient(90deg, var(--brand), var(--accent)); }\\r\\n\\r\\n/* === LOADING === */\\r\\n.overlay{ position:fixed; top:0; left:0; right:0; bottom:0; z-index:9999; display:flex; align-items:center; justify-content:center; animation: fadeIn 0.2s ease; }\\r\\n.overlay-backdrop{ position:absolute; top:0; left:0; right:0; bottom:0; background:rgba(0,0,0,0.8); -webkit-backdrop-filter:blur(12px); backdrop-filter:blur(12px); }\\r\\n.overlay-panel{ position:relative; z-index:1; text-align:center; animation: slideUp 0.3s ease; }\\r\\n.overlay-hint{ margin-top:16px; color:var(--muted); font-size:14px; }\\r\\n@keyframes fadeIn{ from{opacity:0} to{opacity:1} }\\r\\n@keyframes slideUp{ from{opacity:0; transform:translateY(20px)} to{opacity:1; transform:translateY(0)} }\\r\\n\\r\\n.foot{ margin-top:32px; font-size:14px; color:var(--muted); line-height:1.5; }\\r\\n.foot a{ color:var(--brand); text-decoration:none; }\\r\\n.foot a:hover{ text-decoration:underline; }\\r\\n\\r\\n/* === RESPONSIVE === */\\r\\n@media (max-width: 768px) {\\r\\n  .hero { padding: 16px 12px; }\\r\\n  .grid { grid-template-columns: 1fr; gap: 16px; margin-top: 24px; }\\r\\n  .tile { padding: 20px; }\\r\\n  .topbar-left { gap: 8px; }\\r\\n  .hello-hi { font-size: 15px; }\\r\\n  .hello-sub { font-size: 12px; }\\r\\n  .announcements-slider { height: 240px; }\\r\\n  .announcement-card { padding: 32px 20px; }\\r\\n  .announcement-title { font-size: 20px; }\\r\\n  .announcement-text { font-size: 14px; max-width: 280px; }\\r\\n  .sidebar { width: 280px; }\\r\\n  .sidebar-header { padding: 16px 20px; }\\r\\n  .sidebar-wallet { padding: 16px 20px; }\\r\\n  .sidebar-section-title { padding: 0 20px; }\\r\\n  .sidebar-item { padding: 12px 20px; }\\r\\n  .sidebar-footer { padding: 16px 20px; }\\r\\n  .wallet-overlay { padding: 16px; }\\r\\n  .wallet-menu { border-radius: 20px; max-height: 95vh; }\\r\\n  .wallet-header { padding: 16px 20px; }\\r\\n  .wallet-balance-section { padding: 20px; }\\r\\n  .balance-card { padding: 20px; }\\r\\n  .balance-amount { font-size: 24px; }\\r\\n  .wallet-actions { padding: 0 20px 20px; gap: 10px; }\\r\\n  .action-button { padding: 14px 10px; }\\r\\n  .action-icon { font-size: 18px; }\\r\\n  .action-button span { font-size: 11px; }\\r\\n  .wallet-content { padding: 0 20px 20px; }\\r\\n  .transaction-item { padding: 14px; }\\r\\n  .payment-method { padding: 14px; }\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/globals.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* === BASE STYLES === */\\r\\n* { box-sizing: border-box; }\\r\\nhtml { height: 100%; }\\r\\nbody { min-height: 100%; }\\r\\n#__next { min-height: 100vh; position: relative; z-index: 0; }\\r\\n\\r\\n:root{\\r\\n  --bg: #0a0f19;\\r\\n  --panel: rgba(20,28,46,0.90);\\r\\n  --card: rgba(255,255,255,0.06);\\r\\n  --border: rgba(255,255,255,0.12);\\r\\n  --text: #e9eef7;\\r\\n  --muted: rgba(233,238,247,.75);\\r\\n  --brand: #7bc7ff;\\r\\n  --accent: #b7a3ff;\\r\\n}\\r\\n\\r\\nbody{\\r\\n  margin:0;\\r\\n  font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, \\\"Noto Sans\\\", sans-serif;\\r\\n  color:var(--text);\\r\\n  background: transparent;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n/* Fixed background */\\r\\nbody::before{\\r\\n  content: '';\\r\\n  position: fixed;\\r\\n  top: 0; left: 0; right: 0; bottom: 0;\\r\\n  z-index: -2;\\r\\n  background: linear-gradient(135deg, #0a0f19 0%, #162745 25%, #11243d 50%, #0f1e3a 75%, #0a0f19 100%);\\r\\n}\\r\\n\\r\\n.container{ min-height:100vh; width: 100%; padding: 0; margin: 0; }\\r\\n\\r\\n.hero{\\r\\n  width: 100%; max-width: none; min-height: 100vh; position: relative;\\r\\n  padding: 20px 16px; border-radius: 0; background: transparent;\\r\\n  border: none; box-shadow: none; overflow-x: hidden;\\r\\n}\\r\\n\\r\\n/* === TOPBAR === */\\r\\n.topbar {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-between;\\r\\n  margin-bottom: 24px;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.topbar-left {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 12px;\\r\\n}\\r\\n\\r\\n.menu-button {\\r\\n  width: 40px; height: 40px; border: none;\\r\\n  background: var(--card); color: var(--text);\\r\\n  border-radius: 12px; display: flex; align-items: center; justify-content: center;\\r\\n  cursor: pointer; transition: all 0.2s ease; font-size: 16px;\\r\\n  border: 1px solid var(--border);\\r\\n}\\r\\n\\r\\n.menu-button:hover {\\r\\n  background: rgba(255, 255, 255, 0.08);\\r\\n  color: var(--brand);\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.avatar {\\r\\n  width: 40px; height: 40px; border-radius: 12px;\\r\\n  object-fit: cover; border: 2px solid var(--border);\\r\\n}\\r\\n\\r\\n.hello { display: flex; flex-direction: column; gap: 2px; }\\r\\n.hello-hi { font-size: 16px; font-weight: 700; color: var(--text); line-height: 1.2; }\\r\\n.hello-sub { font-size: 13px; color: var(--muted); line-height: 1.2; }\\r\\n\\r\\n/* === GRID === */\\r\\n.grid {\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\\r\\n  gap: 20px;\\r\\n  margin-top: 32px;\\r\\n}\\r\\n\\r\\n/* === TILES === */\\r\\n.tile {\\r\\n  background: var(--panel);\\r\\n  border: 1px solid var(--border);\\r\\n  border-radius: 24px;\\r\\n  padding: 28px;\\r\\n  text-decoration: none;\\r\\n  color: var(--text);\\r\\n  transition: all 0.4s ease;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n  backdrop-filter: blur(30px);\\r\\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4), 0 8px 32px rgba(0, 0, 0, 0.3);\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 20px;\\r\\n}\\r\\n\\r\\n.tile:hover {\\r\\n  transform: translateY(-6px) scale(1.02);\\r\\n  box-shadow: 0 25px 80px rgba(0, 0, 0, 0.5), 0 12px 40px rgba(123, 199, 255, 0.2);\\r\\n  border-color: var(--brand);\\r\\n}\\r\\n\\r\\n.tile-icon {\\r\\n  font-size: 36px; position: relative; z-index: 2;\\r\\n  filter: drop-shadow(0 4px 12px rgba(0, 0, 0, 0.4));\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.tile:hover .tile-icon {\\r\\n  transform: scale(1.1) rotate(5deg);\\r\\n}\\r\\n\\r\\n.tile-head {\\r\\n  display: flex; align-items: center; justify-content: space-between;\\r\\n  gap: 12px; position: relative; z-index: 2;\\r\\n}\\r\\n\\r\\n.tile-title {\\r\\n  font-size: 22px; font-weight: 900; color: var(--text); margin: 0;\\r\\n  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.tile-badge {\\r\\n  background: linear-gradient(90deg, #ff6b6b, #ff8e8e);\\r\\n  color: white; font-size: 11px; font-weight: 700;\\r\\n  padding: 4px 8px; border-radius: 8px; text-transform: uppercase;\\r\\n  animation: pulse 2s ease-in-out infinite;\\r\\n}\\r\\n\\r\\n@keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: 0.8; } }\\r\\n\\r\\n.tile-desc {\\r\\n  font-size: 15px; color: var(--muted); line-height: 1.6;\\r\\n  position: relative; z-index: 2; margin: 0;\\r\\n}\\r\\n\\r\\n.tile-list {\\r\\n  list-style: none; padding: 0; margin: 0; position: relative; z-index: 2;\\r\\n}\\r\\n\\r\\n.tile-list li {\\r\\n  font-size: 14px; color: var(--muted); line-height: 1.6; margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n/* Tile colors */\\r\\n.tile-auction {\\r\\n  background: linear-gradient(135deg, rgba(255, 107, 107, 0.15) 0%, rgba(255, 142, 142, 0.08) 100%);\\r\\n  border: 1px solid rgba(255, 107, 107, 0.2);\\r\\n}\\r\\n\\r\\n.tile-gifts {\\r\\n  background: linear-gradient(135deg, rgba(123, 199, 255, 0.15) 0%, rgba(123, 199, 255, 0.08) 100%);\\r\\n  border: 1px solid rgba(123, 199, 255, 0.2);\\r\\n}\\r\\n\\r\\n.tile-plans {\\r\\n  background: linear-gradient(135deg, rgba(183, 163, 255, 0.15) 0%, rgba(183, 163, 255, 0.08) 100%);\\r\\n  border: 1px solid rgba(183, 163, 255, 0.2);\\r\\n}\\r\\n\\r\\n.tile-orders {\\r\\n  background: linear-gradient(135deg, rgba(34, 197, 94, 0.15) 0%, rgba(34, 197, 94, 0.08) 100%);\\r\\n  border: 1px solid rgba(34, 197, 94, 0.2);\\r\\n}\\r\\n\\r\\n.tile-create {\\r\\n  background: linear-gradient(135deg, rgba(255, 193, 7, 0.15) 0%, rgba(255, 193, 7, 0.08) 100%);\\r\\n  border: 1px solid rgba(255, 193, 7, 0.2);\\r\\n}\\r\\n\\r\\n/* === ANNOUNCEMENTS === */\\r\\n.announcements-container { margin-top: 32px; }\\r\\n\\r\\n.announcements-header {\\r\\n  display: flex; align-items: center; justify-content: space-between;\\r\\n  margin-bottom: 20px; padding: 0 4px;\\r\\n}\\r\\n\\r\\n.announcements-title {\\r\\n  font-size: 18px; font-weight: 800; color: var(--text);\\r\\n  display: flex; align-items: center; gap: 10px;\\r\\n}\\r\\n\\r\\n.announcements-counter {\\r\\n  font-size: 12px; color: var(--brand);\\r\\n  background: linear-gradient(135deg, rgba(123, 199, 255, 0.15), rgba(183, 163, 255, 0.15));\\r\\n  padding: 6px 12px; border-radius: 16px;\\r\\n  border: 1px solid rgba(123, 199, 255, 0.3);\\r\\n  font-weight: 700; backdrop-filter: blur(10px);\\r\\n}\\r\\n\\r\\n.announcements-slider {\\r\\n  position: relative; background: var(--panel);\\r\\n  border: 1px solid var(--border); border-radius: 24px;\\r\\n  overflow: hidden; backdrop-filter: blur(30px);\\r\\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4), 0 8px 32px rgba(123, 199, 255, 0.1);\\r\\n  height: 280px; touch-action: pan-x;\\r\\n}\\r\\n\\r\\n.announcements-wrapper { position: relative; width: 100%; height: 100%; }\\r\\n\\r\\n.announcement-card {\\r\\n  position: absolute; top: 0; left: 0; width: 100%; height: 100%;\\r\\n  padding: 40px 32px; display: flex; flex-direction: column;\\r\\n  justify-content: center; text-align: center;\\r\\n  transition: all 0.5s ease; cursor: pointer;\\r\\n  background: linear-gradient(135deg, var(--type-color, rgba(123, 199, 255, 0.1)) 0%, transparent 100%);\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n.announcement-card.active {\\r\\n  transform: translateX(0%) scale(1) !important;\\r\\n  opacity: 1 !important; z-index: 10 !important;\\r\\n}\\r\\n\\r\\n.announcement-content { position: relative; z-index: 2; }\\r\\n\\r\\n.announcement-type-badge {\\r\\n  display: inline-block; font-size: 10px; font-weight: 700;\\r\\n  text-transform: uppercase; padding: 4px 8px; border-radius: 8px;\\r\\n  background: rgba(255, 255, 255, 0.1); color: var(--text);\\r\\n  margin-bottom: 12px; letter-spacing: 0.5px;\\r\\n}\\r\\n\\r\\n.announcement-title {\\r\\n  font-size: 24px; font-weight: 900; color: var(--text);\\r\\n  margin: 0 0 20px 0; line-height: 1.2;\\r\\n  display: flex; align-items: center; justify-content: center; gap: 12px;\\r\\n  text-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\\r\\n  position: relative; z-index: 3;\\r\\n}\\r\\n\\r\\n.announcement-text {\\r\\n  font-size: 16px; color: var(--muted); line-height: 1.6;\\r\\n  margin: 0 0 24px 0; max-width: 400px;\\r\\n  margin-left: auto; margin-right: auto;\\r\\n  position: relative; z-index: 3;\\r\\n  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.announcements-dots {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  gap: 12px;\\r\\n  padding: 20px 24px;\\r\\n  background: linear-gradient(135deg, var(--card) 0%, rgba(255, 255, 255, 0.02) 100%);\\r\\n  border-top: 1px solid var(--border);\\r\\n}\\r\\n\\r\\n.announcement-dot {\\r\\n  width: 12px;\\r\\n  height: 12px;\\r\\n  border-radius: 50%;\\r\\n  border: none;\\r\\n  background: rgba(255, 255, 255, 0.2);\\r\\n  cursor: pointer;\\r\\n  transition: all 0.3s ease;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.announcement-dot::before {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  background: linear-gradient(135deg, var(--brand), var(--accent));\\r\\n  border-radius: 50%;\\r\\n  opacity: 0;\\r\\n  transition: opacity 0.3s ease;\\r\\n}\\r\\n\\r\\n.announcement-dot:hover {\\r\\n  transform: scale(1.2);\\r\\n  background: rgba(255, 255, 255, 0.3);\\r\\n}\\r\\n\\r\\n.announcement-dot.active {\\r\\n  background: transparent;\\r\\n  transform: scale(1.3);\\r\\n  box-shadow: 0 0 0 2px rgba(123, 199, 255, 0.3);\\r\\n}\\r\\n\\r\\n.announcement-dot.active::before {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n/* === SIDEBAR === */\\r\\n.sidebar-overlay {\\r\\n  position: fixed; top: 0; left: 0; right: 0; bottom: 0;\\r\\n  background: rgba(0, 0, 0, 0.8); backdrop-filter: blur(12px);\\r\\n  z-index: 1000; display: flex; align-items: center; justify-content: flex-start;\\r\\n  opacity: 0; visibility: hidden; transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.sidebar-overlay.open { opacity: 1; visibility: visible; }\\r\\n\\r\\n.sidebar {\\r\\n  background: var(--panel); border-right: 1px solid var(--border);\\r\\n  backdrop-filter: blur(30px); width: 320px; height: 100vh;\\r\\n  overflow-y: auto; position: relative; transform: translateX(-100%);\\r\\n  transition: all 0.3s ease; box-shadow: 0 0 50px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.sidebar.open { transform: translateX(0); }\\r\\n\\r\\n.sidebar-header {\\r\\n  display: flex; align-items: center; justify-content: space-between;\\r\\n  padding: 20px 24px; border-bottom: 1px solid var(--border);\\r\\n  position: sticky; top: 0; background: var(--panel); z-index: 10;\\r\\n}\\r\\n\\r\\n.sidebar-user {\\r\\n  display: flex; align-items: center; gap: 12px; flex: 1;\\r\\n}\\r\\n\\r\\n.sidebar-avatar {\\r\\n  width: 48px; height: 48px; border-radius: 16px;\\r\\n  object-fit: cover; border: 2px solid var(--border);\\r\\n}\\r\\n\\r\\n.sidebar-avatar-placeholder {\\r\\n  width: 48px; height: 48px; border-radius: 16px;\\r\\n  background: linear-gradient(135deg, var(--brand), var(--accent));\\r\\n  display: flex; align-items: center; justify-content: center;\\r\\n  font-size: 20px; font-weight: 700; color: white;\\r\\n  border: 2px solid var(--border);\\r\\n}\\r\\n\\r\\n.sidebar-user-info { flex: 1; min-width: 0; }\\r\\n\\r\\n.sidebar-user-name {\\r\\n  font-size: 16px; font-weight: 700; color: var(--text);\\r\\n  margin-bottom: 2px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.sidebar-user-handle {\\r\\n  font-size: 14px; color: var(--muted);\\r\\n  white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.sidebar-close {\\r\\n  width: 36px; height: 36px; border: none;\\r\\n  background: rgba(255, 255, 255, 0.1); color: var(--muted);\\r\\n  border-radius: 12px; display: flex; align-items: center; justify-content: center;\\r\\n  cursor: pointer; transition: all 0.2s ease; font-size: 16px;\\r\\n}\\r\\n\\r\\n.sidebar-close:hover {\\r\\n  background: rgba(255, 255, 255, 0.15);\\r\\n  color: var(--text); transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.sidebar-wallet { padding: 20px 24px; border-bottom: 1px solid var(--border); }\\r\\n\\r\\n.wallet-card {\\r\\n  background: var(--card); border: 1px solid var(--border);\\r\\n  border-radius: 16px; padding: 16px; display: flex;\\r\\n  align-items: center; gap: 12px; cursor: pointer;\\r\\n  transition: all 0.2s ease; position: relative; overflow: hidden;\\r\\n}\\r\\n\\r\\n.wallet-card:hover {\\r\\n  background: rgba(255, 255, 255, 0.05); border-color: var(--brand);\\r\\n  transform: translateY(-1px); box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\\r\\n}\\r\\n\\r\\n.wallet-icon { font-size: 24px; position: relative; z-index: 2; }\\r\\n.wallet-info { flex: 1; position: relative; z-index: 2; }\\r\\n.wallet-title { font-size: 14px; font-weight: 600; color: var(--text); margin-bottom: 2px; }\\r\\n.wallet-balance { font-size: 18px; font-weight: 700; color: var(--brand); }\\r\\n.wallet-arrow { color: var(--muted); font-size: 16px; position: relative; z-index: 2; }\\r\\n\\r\\n.sidebar-content { padding: 20px 0; }\\r\\n.sidebar-section { margin-bottom: 32px; }\\r\\n\\r\\n.sidebar-section-title {\\r\\n  font-size: 12px; font-weight: 700; color: var(--muted);\\r\\n  text-transform: uppercase; letter-spacing: 0.5px;\\r\\n  margin-bottom: 12px; padding: 0 24px;\\r\\n}\\r\\n\\r\\n.sidebar-item {\\r\\n  display: flex; align-items: center; gap: 12px;\\r\\n  padding: 12px 24px; color: var(--text); text-decoration: none;\\r\\n  transition: all 0.2s ease; position: relative;\\r\\n}\\r\\n\\r\\n.sidebar-item:hover { background: rgba(255, 255, 255, 0.05); color: var(--brand); }\\r\\n.sidebar-item-icon { font-size: 18px; width: 20px; text-align: center; }\\r\\n\\r\\n.sidebar-footer {\\r\\n  position: sticky; bottom: 0; background: var(--panel);\\r\\n  border-top: 1px solid var(--border); padding: 20px 24px;\\r\\n}\\r\\n\\r\\n.sidebar-app-info { text-align: center; }\\r\\n.sidebar-app-name { font-size: 14px; font-weight: 700; color: var(--text); margin-bottom: 2px; }\\r\\n.sidebar-app-version { font-size: 12px; color: var(--muted); }\\r\\n\\r\\n/* === WALLET MENU === */\\r\\n.wallet-overlay {\\r\\n  position: fixed; top: 0; left: 0; right: 0; bottom: 0;\\r\\n  background: rgba(0, 0, 0, 0.8); backdrop-filter: blur(12px);\\r\\n  z-index: 1000; display: flex; align-items: center; justify-content: center;\\r\\n  opacity: 0; visibility: hidden; transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.wallet-overlay.open { opacity: 1; visibility: visible; }\\r\\n\\r\\n.wallet-menu {\\r\\n  background: var(--panel); border-radius: 24px; border: 1px solid var(--border);\\r\\n  box-shadow: 0 24px 80px rgba(0, 0, 0, 0.6); backdrop-filter: blur(30px);\\r\\n  width: 100%; max-width: 420px; max-height: 90vh; overflow-y: auto;\\r\\n  position: relative; transform: translateY(20px) scale(0.95);\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.wallet-menu.open { transform: translateY(0) scale(1); }\\r\\n\\r\\n.wallet-header {\\r\\n  display: flex; align-items: center; padding: 20px 24px;\\r\\n  border-bottom: 1px solid var(--border); position: sticky;\\r\\n  top: 0; background: var(--panel); z-index: 10;\\r\\n}\\r\\n\\r\\n.wallet-back {\\r\\n  width: 36px; height: 36px; border: none;\\r\\n  background: rgba(255, 255, 255, 0.1); color: var(--text);\\r\\n  border-radius: 12px; display: flex; align-items: center; justify-content: center;\\r\\n  cursor: pointer; transition: all 0.2s ease; font-size: 18px; margin-right: 12px;\\r\\n}\\r\\n\\r\\n.wallet-back:hover { background: rgba(255, 255, 255, 0.15); transform: scale(1.05); }\\r\\n\\r\\n.wallet-header-title { font-size: 18px; font-weight: 700; color: var(--text); flex: 1; }\\r\\n.wallet-header-spacer { width: 36px; }\\r\\n\\r\\n.wallet-balance-section { padding: 24px; }\\r\\n\\r\\n.balance-card {\\r\\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\r\\n  border-radius: 20px; padding: 24px; display: flex;\\r\\n  align-items: center; gap: 16px; position: relative; overflow: hidden;\\r\\n}\\r\\n\\r\\n.balance-icon { font-size: 32px; filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3)); }\\r\\n.balance-info { flex: 1; color: white; }\\r\\n.balance-label { font-size: 14px; font-weight: 600; opacity: 0.9; margin-bottom: 4px; }\\r\\n.balance-amount { font-size: 28px; font-weight: 800; margin-bottom: 4px; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3); }\\r\\n.balance-subtitle { font-size: 12px; opacity: 0.8; }\\r\\n\\r\\n.wallet-actions {\\r\\n  display: grid; grid-template-columns: repeat(3, 1fr);\\r\\n  gap: 12px; padding: 0 24px 24px;\\r\\n}\\r\\n\\r\\n.action-button {\\r\\n  background: var(--card); border: 1px solid var(--border);\\r\\n  border-radius: 16px; padding: 16px 12px; display: flex;\\r\\n  flex-direction: column; align-items: center; gap: 8px;\\r\\n  cursor: pointer; transition: all 0.2s ease; color: var(--text);\\r\\n}\\r\\n\\r\\n.action-button:hover {\\r\\n  background: rgba(255, 255, 255, 0.05); border-color: var(--brand);\\r\\n  transform: translateY(-2px); box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\\r\\n}\\r\\n\\r\\n.action-icon { font-size: 20px; }\\r\\n.action-button span { font-size: 12px; font-weight: 600; text-align: center; }\\r\\n\\r\\n.wallet-content { padding: 0 24px 24px; }\\r\\n.transactions-section { margin-bottom: 32px; }\\r\\n\\r\\n.section-title {\\r\\n  font-size: 16px; font-weight: 700; color: var(--text);\\r\\n  margin-bottom: 16px; display: flex; align-items: center; gap: 8px;\\r\\n}\\r\\n\\r\\n.transaction-list {\\r\\n  background: var(--card); border: 1px solid var(--border);\\r\\n  border-radius: 16px; overflow: hidden;\\r\\n}\\r\\n\\r\\n.transaction-item {\\r\\n  display: flex; align-items: center; padding: 16px;\\r\\n  border-bottom: 1px solid var(--border); transition: background 0.2s ease;\\r\\n}\\r\\n\\r\\n.transaction-item:last-child { border-bottom: none; }\\r\\n.transaction-item:hover { background: rgba(255, 255, 255, 0.02); }\\r\\n\\r\\n.transaction-icon {\\r\\n  width: 40px; height: 40px; border-radius: 12px;\\r\\n  display: flex; align-items: center; justify-content: center;\\r\\n  font-size: 18px; margin-right: 12px;\\r\\n}\\r\\n\\r\\n.transaction-icon.income { background: rgba(34, 197, 94, 0.1); color: #22c55e; }\\r\\n.transaction-icon.expense { background: rgba(239, 68, 68, 0.1); color: #ef4444; }\\r\\n\\r\\n.transaction-info { flex: 1; }\\r\\n.transaction-title { font-size: 14px; font-weight: 600; color: var(--text); margin-bottom: 2px; }\\r\\n.transaction-date { font-size: 12px; color: var(--muted); }\\r\\n.transaction-amount { font-size: 14px; font-weight: 700; }\\r\\n.transaction-amount.income { color: #22c55e; }\\r\\n.transaction-amount.expense { color: #ef4444; }\\r\\n\\r\\n.transactions-loading {\\r\\n  text-align: center; padding: 40px 20px; color: var(--muted);\\r\\n}\\r\\n\\r\\n.transactions-loading .loading-spinner {\\r\\n  font-size: 24px; margin-bottom: 12px; animation: spin 1s linear infinite;\\r\\n}\\r\\n\\r\\n@keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }\\r\\n\\r\\n.transactions-empty {\\r\\n  text-align: center; padding: 40px 20px; color: var(--muted);\\r\\n}\\r\\n\\r\\n.empty-icon { font-size: 32px; margin-bottom: 12px; }\\r\\n.empty-text { font-size: 16px; font-weight: 600; color: var(--text); margin-bottom: 8px; }\\r\\n.empty-hint { font-size: 12px; color: var(--muted); line-height: 1.4; }\\r\\n\\r\\n.show-all-button {\\r\\n  width: 100%; background: transparent; border: 1px solid var(--border);\\r\\n  color: var(--muted); padding: 12px; border-radius: 12px;\\r\\n  font-size: 14px; font-weight: 600; cursor: pointer;\\r\\n  transition: all 0.2s ease; margin-top: 12px;\\r\\n}\\r\\n\\r\\n.show-all-button:hover {\\r\\n  background: rgba(255, 255, 255, 0.05); color: var(--text); border-color: var(--brand);\\r\\n}\\r\\n\\r\\n.payment-methods-section { margin-bottom: 24px; }\\r\\n\\r\\n.payment-method {\\r\\n  display: flex; align-items: center; padding: 16px;\\r\\n  background: var(--card); border: 1px solid var(--border);\\r\\n  border-radius: 16px; margin-bottom: 12px; cursor: pointer;\\r\\n  transition: all 0.2s ease;\\r\\n}\\r\\n\\r\\n.payment-method:hover {\\r\\n  background: rgba(255, 255, 255, 0.05); border-color: var(--brand);\\r\\n  transform: translateY(-1px);\\r\\n}\\r\\n\\r\\n.payment-icon {\\r\\n  width: 40px; height: 40px; border-radius: 12px;\\r\\n  background: rgba(123, 199, 255, 0.1); display: flex;\\r\\n  align-items: center; justify-content: center;\\r\\n  font-size: 18px; margin-right: 12px;\\r\\n}\\r\\n\\r\\n.payment-info { flex: 1; }\\r\\n.payment-name { font-size: 14px; font-weight: 600; color: var(--text); margin-bottom: 2px; }\\r\\n.payment-desc { font-size: 12px; color: var(--muted); }\\r\\n.payment-arrow { color: var(--muted); font-size: 16px; }\\r\\n\\r\\n/* === BUTTONS === */\\r\\n.row{ display:flex; flex-wrap:wrap; gap:12px; margin-top:22px; }\\r\\n.btn{\\r\\n  display:inline-flex; align-items:center; gap:10px;\\r\\n  padding:12px 20px; border-radius:12px; font-weight:600; font-size:15px;\\r\\n  text-decoration:none; transition:all 0.2s ease; border:none; cursor:pointer;\\r\\n}\\r\\n.btn:disabled{ opacity:.5; cursor:not-allowed; }\\r\\n.btn-primary{\\r\\n  background: linear-gradient(135deg, var(--brand), var(--accent));\\r\\n  color:#fff; box-shadow:0 6px 20px rgba(125,200,255,.3);\\r\\n}\\r\\n.btn-primary:hover:not(:disabled){\\r\\n  transform:translateY(-2px); box-shadow:0 12px 35px rgba(125,200,255,.4);\\r\\n}\\r\\n.btn-ghost{\\r\\n  background:var(--card); color:var(--text); border:1px solid var(--border);\\r\\n}\\r\\n.btn-ghost:hover{ background:rgba(255,255,255,.08); color:var(--brand); }\\r\\n\\r\\n/* === TYPOGRAPHY === */\\r\\n.h1{ margin:8px 0 10px; font-size: clamp(28px, 5.8vw, 44px); line-height:1.1; font-weight:900; }\\r\\n.lead{ color:var(--muted); font-size:16px; max-width:55ch; }\\r\\n.brand{ display:inline-flex; align-items:center; gap:10px; font-weight:800; color:var(--muted); margin-bottom:10px; }\\r\\n.badge{ display:inline-flex; align-items:center; gap:8px; padding:6px 10px; font-size:12px; font-weight:700; color:#0b1220; border-radius:999px; background: linear-gradient(90deg, var(--brand), var(--accent)); }\\r\\n\\r\\n/* === LOADING === */\\r\\n.overlay{ position:fixed; top:0; left:0; right:0; bottom:0; z-index:9999; display:flex; align-items:center; justify-content:center; animation: fadeIn 0.2s ease; }\\r\\n.overlay-backdrop{ position:absolute; top:0; left:0; right:0; bottom:0; background:rgba(0,0,0,0.8); backdrop-filter:blur(12px); }\\r\\n.overlay-panel{ position:relative; z-index:1; text-align:center; animation: slideUp 0.3s ease; }\\r\\n.overlay-hint{ margin-top:16px; color:var(--muted); font-size:14px; }\\r\\n@keyframes fadeIn{ from{opacity:0} to{opacity:1} }\\r\\n@keyframes slideUp{ from{opacity:0; transform:translateY(20px)} to{opacity:1; transform:translateY(0)} }\\r\\n\\r\\n.foot{ margin-top:32px; font-size:14px; color:var(--muted); line-height:1.5; }\\r\\n.foot a{ color:var(--brand); text-decoration:none; }\\r\\n.foot a:hover{ text-decoration:underline; }\\r\\n\\r\\n/* === RESPONSIVE === */\\r\\n@media (max-width: 768px) {\\r\\n  .hero { padding: 16px 12px; }\\r\\n  .grid { grid-template-columns: 1fr; gap: 16px; margin-top: 24px; }\\r\\n  .tile { padding: 20px; }\\r\\n  .topbar-left { gap: 8px; }\\r\\n  .hello-hi { font-size: 15px; }\\r\\n  .hello-sub { font-size: 12px; }\\r\\n  .announcements-slider { height: 240px; }\\r\\n  .announcement-card { padding: 32px 20px; }\\r\\n  .announcement-title { font-size: 20px; }\\r\\n  .announcement-text { font-size: 14px; max-width: 280px; }\\r\\n  .sidebar { width: 280px; }\\r\\n  .sidebar-header { padding: 16px 20px; }\\r\\n  .sidebar-wallet { padding: 16px 20px; }\\r\\n  .sidebar-section-title { padding: 0 20px; }\\r\\n  .sidebar-item { padding: 12px 20px; }\\r\\n  .sidebar-footer { padding: 16px 20px; }\\r\\n  .wallet-overlay { padding: 16px; }\\r\\n  .wallet-menu { border-radius: 20px; max-height: 95vh; }\\r\\n  .wallet-header { padding: 16px 20px; }\\r\\n  .wallet-balance-section { padding: 20px; }\\r\\n  .balance-card { padding: 20px; }\\r\\n  .balance-amount { font-size: 24px; }\\r\\n  .wallet-actions { padding: 0 20px 20px; gap: 10px; }\\r\\n  .action-button { padding: 14px 10px; }\\r\\n  .action-icon { font-size: 18px; }\\r\\n  .action-button span { font-size: 11px; }\\r\\n  .wallet-content { padding: 0 20px 20px; }\\r\\n  .transaction-item { padding: 14px; }\\r\\n  .payment-method { padding: 14px; }\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxNF0udXNlWzFdIS4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMl0hLi9zdHlsZXMvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDd0g7QUFDeEgsOEJBQThCLGtIQUEyQjtBQUN6RDtBQUNBLDJFQUEyRSx5QkFBeUIsV0FBVyxlQUFlLFdBQVcsbUJBQW1CLGNBQWMsbUJBQW1CLG9CQUFvQixhQUFhLGNBQWMsb0JBQW9CLG1DQUFtQyxxQ0FBcUMsdUNBQXVDLHNCQUFzQixxQ0FBcUMsdUJBQXVCLHdCQUF3QixLQUFLLGFBQWEsZUFBZSx1R0FBdUcsd0JBQXdCLDhCQUE4Qix5QkFBeUIsS0FBSywrQ0FBK0Msa0JBQWtCLHNCQUFzQixjQUFjLFNBQVMsVUFBVSxVQUFVLGtCQUFrQiwyR0FBMkcsS0FBSyxvQkFBb0Isa0JBQWtCLGFBQWEsWUFBWSxZQUFZLGNBQWMsbUJBQW1CLGlCQUFpQixtQkFBbUIsbUJBQW1CLDBCQUEwQixrQkFBa0Isd0JBQXdCLG9CQUFvQixrQkFBa0IsbUJBQW1CLEtBQUsseUNBQXlDLG9CQUFvQiwwQkFBMEIscUNBQXFDLDBCQUEwQixpQkFBaUIsS0FBSyxzQkFBc0Isb0JBQW9CLDBCQUEwQixnQkFBZ0IsS0FBSyxzQkFBc0IsbUJBQW1CLGNBQWMsYUFBYSwrQkFBK0IsbUJBQW1CLDJCQUEyQixlQUFlLHFCQUFxQix3QkFBd0IsdUJBQXVCLDJCQUEyQixnQkFBZ0Isc0NBQXNDLEtBQUssNEJBQTRCLDRDQUE0QywwQkFBMEIsNkJBQTZCLEtBQUssaUJBQWlCLG1CQUFtQixjQUFjLG9CQUFvQix5QkFB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QXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL2dsb2JhbHMuY3NzP2E2M2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qID09PSBCQVNFIFNUWUxFUyA9PT0gKi9cXHJcXG4qIHsgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxcclxcbmh0bWwgeyBoZWlnaHQ6IDEwMCU7IH1cXHJcXG5ib2R5IHsgbWluLWhlaWdodDogMTAwJTsgfVxcclxcbiNfX25leHQgeyBtaW4taGVpZ2h0OiAxMDB2aDsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAwOyB9XFxyXFxuXFxyXFxuOnJvb3R7XFxyXFxuICAtLWJnOiAjMGEwZjE5O1xcclxcbiAgLS1wYW5lbDogcmdiYSgyMCwyOCw0NiwwLjkwKTtcXHJcXG4gIC0tY2FyZDogcmdiYSgyNTUsMjU1LDI1NSwwLjA2KTtcXHJcXG4gIC0tYm9yZGVyOiByZ2JhKDI1NSwyNTUsMjU1LDAuMTIpO1xcclxcbiAgLS10ZXh0OiAjZTllZWY3O1xcclxcbiAgLS1tdXRlZDogcmdiYSgyMzMsMjM4LDI0NywuNzUpO1xcclxcbiAgLS1icmFuZDogIzdiYzdmZjtcXHJcXG4gIC0tYWNjZW50OiAjYjdhM2ZmO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5e1xcclxcbiAgbWFyZ2luOjA7XFxyXFxuICBmb250LWZhbWlseTogSW50ZXIsIHN5c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgU2Vnb2UgVUksIFJvYm90bywgQXJpYWwsIFxcXCJOb3RvIFNhbnNcXFwiLCBzYW5zLXNlcmlmO1xcclxcbiAgY29sb3I6dmFyKC0tdGV4dCk7XFxyXFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG59XFxyXFxuXFxyXFxuLyogRml4ZWQgYmFja2dyb3VuZCAqL1xcclxcbmJvZHk6OmJlZm9yZXtcXHJcXG4gIGNvbnRlbnQ6ICcnO1xcclxcbiAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgdG9wOiAwOyBsZWZ0OiAwOyByaWdodDogMDsgYm90dG9tOiAwO1xcclxcbiAgei1pbmRleDogLTI7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjMGEwZjE5IDAlLCAjMTYyNzQ1IDI1JSwgIzExMjQzZCA1MCUsICMwZjFlM2EgNzUlLCAjMGEwZjE5IDEwMCUpO1xcclxcbn1cXHJcXG5cXHJcXG4uY29udGFpbmVyeyBtaW4taGVpZ2h0OjEwMHZoOyB3aWR0aDogMTAwJTsgcGFkZGluZzogMDsgbWFyZ2luOiAwOyB9XFxyXFxuXFxyXFxuLmhlcm97XFxyXFxuICB3aWR0aDogMTAwJTsgbWF4LXdpZHRoOiBub25lOyBtaW4taGVpZ2h0OiAxMDB2aDsgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgcGFkZGluZzogMjBweCAxNnB4OyBib3JkZXItcmFkaXVzOiAwOyBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXHJcXG4gIGJvcmRlcjogbm9uZTsgYm94LXNoYWRvdzogbm9uZTsgb3ZlcmZsb3cteDogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG4vKiA9PT0gVE9QQkFSID09PSAqL1xcclxcbi50b3BiYXIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG59XFxyXFxuXFxyXFxuLnRvcGJhci1sZWZ0IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgZ2FwOiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4ubWVudS1idXR0b24ge1xcclxcbiAgd2lkdGg6IDQwcHg7IGhlaWdodDogNDBweDsgYm9yZGVyOiBub25lO1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tY2FyZCk7IGNvbG9yOiB2YXIoLS10ZXh0KTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDEycHg7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyOyB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlOyBmb250LXNpemU6IDE2cHg7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbn1cXHJcXG5cXHJcXG4ubWVudS1idXR0b246aG92ZXIge1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA4KTtcXHJcXG4gIGNvbG9yOiB2YXIoLS1icmFuZCk7XFxyXFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xcclxcbn1cXHJcXG5cXHJcXG4uYXZhdGFyIHtcXHJcXG4gIHdpZHRoOiA0MHB4OyBoZWlnaHQ6IDQwcHg7IGJvcmRlci1yYWRpdXM6IDEycHg7XFxyXFxuICBvYmplY3QtZml0OiBjb3ZlcjsgYm9yZGVyOiAycHggc29saWQgdmFyKC0tYm9yZGVyKTtcXHJcXG59XFxyXFxuXFxyXFxuLmhlbGxvIHsgZGlzcGxheTogZmxleDsgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgZ2FwOiAycHg7IH1cXHJcXG4uaGVsbG8taGkgeyBmb250LXNpemU6IDE2cHg7IGZvbnQtd2VpZ2h0OiA3MDA7IGNvbG9yOiB2YXIoLS10ZXh0KTsgbGluZS1oZWlnaHQ6IDEuMjsgfVxcclxcbi5oZWxsby1zdWIgeyBmb250LXNpemU6IDEzcHg7IGNvbG9yOiB2YXIoLS1tdXRlZCk7IGxpbmUtaGVpZ2h0OiAxLjI7IH1cXHJcXG5cXHJcXG4vKiA9PT0gR1JJRCA9PT0gKi9cXHJcXG4uZ3JpZCB7XFxyXFxuICBkaXNwbGF5OiBncmlkO1xcclxcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyODBweCwgMWZyKSk7XFxyXFxuICBncmlkLWdhcDogMjBweDtcXHJcXG4gIGdhcDogMjBweDtcXHJcXG4gIG1hcmdpbi10b3A6IDMycHg7XFxyXFxufVxcclxcblxcclxcbi8qID09PSBUSUxFUyA9PT0gKi9cXHJcXG4udGlsZSB7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1wYW5lbCk7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMjRweDtcXHJcXG4gIHBhZGRpbmc6IDI4cHg7XFxyXFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuICBjb2xvcjogdmFyKC0tdGV4dCk7XFxyXFxuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gIC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyOiBibHVyKDMwcHgpO1xcclxcbiAgICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMzBweCk7XFxyXFxuICBib3gtc2hhZG93OiAwIDIwcHggNjBweCByZ2JhKDAsIDAsIDAsIDAuNCksIDAgOHB4IDMycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBnYXA6IDIwcHg7XFxyXFxufVxcclxcblxcclxcbi50aWxlOmhvdmVyIHtcXHJcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNnB4KSBzY2FsZSgxLjAyKTtcXHJcXG4gIGJveC1zaGFkb3c6IDAgMjVweCA4MHB4IHJnYmEoMCwgMCwgMCwgMC41KSwgMCAxMnB4IDQwcHggcmdiYSgxMjMsIDE5OSwgMjU1LCAwLjIpO1xcclxcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1icmFuZCk7XFxyXFxufVxcclxcblxcclxcbi50aWxlLWljb24ge1xcclxcbiAgZm9udC1zaXplOiAzNnB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDI7XFxyXFxuICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgNHB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjQpKTtcXHJcXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XFxyXFxufVxcclxcblxcclxcbi50aWxlOmhvdmVyIC50aWxlLWljb24ge1xcclxcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpIHJvdGF0ZSg1ZGVnKTtcXHJcXG59XFxyXFxuXFxyXFxuLnRpbGUtaGVhZCB7XFxyXFxuICBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICBnYXA6IDEycHg7IHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMjtcXHJcXG59XFxyXFxuXFxyXFxuLnRpbGUtdGl0bGUge1xcclxcbiAgZm9udC1zaXplOiAyMnB4OyBmb250LXdlaWdodDogOTAwOyBjb2xvcjogdmFyKC0tdGV4dCk7IG1hcmdpbjogMDtcXHJcXG4gIHRleHQtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS1iYWRnZSB7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICNmZjZiNmIsICNmZjhlOGUpO1xcclxcbiAgY29sb3I6IHdoaXRlOyBmb250LXNpemU6IDExcHg7IGZvbnQtd2VpZ2h0OiA3MDA7XFxyXFxuICBwYWRkaW5nOiA0cHggOHB4OyBib3JkZXItcmFkaXVzOiA4cHg7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XFxyXFxuICBhbmltYXRpb246IHB1bHNlIDJzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xcclxcbn1cXHJcXG5cXHJcXG5Aa2V5ZnJhbWVzIHB1bHNlIHsgMCUsIDEwMCUgeyBvcGFjaXR5OiAxOyB9IDUwJSB7IG9wYWNpdHk6IDAuODsgfSB9XFxyXFxuXFxyXFxuLnRpbGUtZGVzYyB7XFxyXFxuICBmb250LXNpemU6IDE1cHg7IGNvbG9yOiB2YXIoLS1tdXRlZCk7IGxpbmUtaGVpZ2h0OiAxLjY7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDI7IG1hcmdpbjogMDtcXHJcXG59XFxyXFxuXFxyXFxuLnRpbGUtbGlzdCB7XFxyXFxuICBsaXN0LXN0eWxlOiBub25lOyBwYWRkaW5nOiAwOyBtYXJnaW46IDA7IHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMjtcXHJcXG59XFxyXFxuXFxyXFxuLnRpbGUtbGlzdCBsaSB7XFxyXFxuICBmb250LXNpemU6IDE0cHg7IGNvbG9yOiB2YXIoLS1tdXRlZCk7IGxpbmUtaGVpZ2h0OiAxLjY7IG1hcmdpbi1ib3R0b206IDhweDtcXHJcXG59XFxyXFxuXFxyXFxuLyogVGlsZSBjb2xvcnMgKi9cXHJcXG4udGlsZS1hdWN0aW9uIHtcXHJcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHJnYmEoMjU1LCAxMDcsIDEwNywgMC4xNSkgMCUsIHJnYmEoMjU1LCAxNDIsIDE0MiwgMC4wOCkgMTAwJSk7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMTA3LCAxMDcsIDAuMik7XFxyXFxufVxcclxcblxcclxcbi50aWxlLWdpZnRzIHtcXHJcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHJnYmEoMTIzLCAxOTksIDI1NSwgMC4xNSkgMCUsIHJnYmEoMTIzLCAxOTksIDI1NSwgMC4wOCkgMTAwJSk7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDEyMywgMTk5LCAyNTUsIDAuMik7XFxyXFxufVxcclxcblxcclxcbi50aWxlLXBsYW5zIHtcXHJcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHJnYmEoMTgzLCAxNjMsIDI1NSwgMC4xNSkgMCUsIHJnYmEoMTgzLCAxNjMsIDI1NSwgMC4wOCkgMTAwJSk7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDE4MywgMTYzLCAyNTUsIDAuMik7XFxyXFxufVxcclxcblxcclxcbi50aWxlLW9yZGVycyB7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCByZ2JhKDM0LCAxOTcsIDk0LCAwLjE1KSAwJSwgcmdiYSgzNCwgMTk3LCA5NCwgMC4wOCkgMTAwJSk7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDM0LCAxOTcsIDk0LCAwLjIpO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS1jcmVhdGUge1xcclxcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgcmdiYSgyNTUsIDE5MywgNywgMC4xNSkgMCUsIHJnYmEoMjU1LCAxOTMsIDcsIDAuMDgpIDEwMCUpO1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDE5MywgNywgMC4yKTtcXHJcXG59XFxyXFxuXFxyXFxuLyogPT09IEFOTk9VTkNFTUVOVFMgPT09ICovXFxyXFxuLmFubm91bmNlbWVudHMtY29udGFpbmVyIHsgbWFyZ2luLXRvcDogMzJweDsgfVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnRzLWhlYWRlciB7XFxyXFxuICBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICBtYXJnaW4tYm90dG9tOiAyMHB4OyBwYWRkaW5nOiAwIDRweDtcXHJcXG59XFxyXFxuXFxyXFxuLmFubm91bmNlbWVudHMtdGl0bGUge1xcclxcbiAgZm9udC1zaXplOiAxOHB4OyBmb250LXdlaWdodDogODAwOyBjb2xvcjogdmFyKC0tdGV4dCk7XFxyXFxuICBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBnYXA6IDEwcHg7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnRzLWNvdW50ZXIge1xcclxcbiAgZm9udC1zaXplOiAxMnB4OyBjb2xvcjogdmFyKC0tYnJhbmQpO1xcclxcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgcmdiYSgxMjMsIDE5OSwgMjU1LCAwLjE1KSwgcmdiYSgxODMsIDE2MywgMjU1LCAwLjE1KSk7XFxyXFxuICBwYWRkaW5nOiA2cHggMTJweDsgYm9yZGVyLXJhZGl1czogMTZweDtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTIzLCAxOTksIDI1NSwgMC4zKTtcXHJcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7IC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpOyBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCk7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnRzLXNsaWRlciB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IGJhY2tncm91bmQ6IHZhcigtLXBhbmVsKTtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7IGJvcmRlci1yYWRpdXM6IDI0cHg7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuOyAtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjogYmx1cigzMHB4KTsgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDMwcHgpO1xcclxcbiAgYm94LXNoYWRvdzogMCAyMHB4IDYwcHggcmdiYSgwLCAwLCAwLCAwLjQpLCAwIDhweCAzMnB4IHJnYmEoMTIzLCAxOTksIDI1NSwgMC4xKTtcXHJcXG4gIGhlaWdodDogMjgwcHg7IHRvdWNoLWFjdGlvbjogcGFuLXg7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnRzLXdyYXBwZXIgeyBwb3NpdGlvbjogcmVsYXRpdmU7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7IH1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LWNhcmQge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDA7IGxlZnQ6IDA7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7XFxyXFxuICBwYWRkaW5nOiA0MHB4IDMycHg7IGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZTsgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgdmFyKC0tdHlwZS1jb2xvciwgcmdiYSgxMjMsIDE5OSwgMjU1LCAwLjEpKSAwJSwgdHJhbnNwYXJlbnQgMTAwJSk7XFxyXFxuICB6LWluZGV4OiAyO1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LWNhcmQuYWN0aXZlIHtcXHJcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSkgc2NhbGUoMSkgIWltcG9ydGFudDtcXHJcXG4gIG9wYWNpdHk6IDEgIWltcG9ydGFudDsgei1pbmRleDogMTAgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxuLmFubm91bmNlbWVudC1jb250ZW50IHsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAyOyB9XFxyXFxuXFxyXFxuLmFubm91bmNlbWVudC10eXBlLWJhZGdlIHtcXHJcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgZm9udC1zaXplOiAxMHB4OyBmb250LXdlaWdodDogNzAwO1xcclxcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgcGFkZGluZzogNHB4IDhweDsgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOyBjb2xvcjogdmFyKC0tdGV4dCk7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAxMnB4OyBsZXR0ZXItc3BhY2luZzogMC41cHg7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnQtdGl0bGUge1xcclxcbiAgZm9udC1zaXplOiAyNHB4OyBmb250LXdlaWdodDogOTAwOyBjb2xvcjogdmFyKC0tdGV4dCk7XFxyXFxuICBtYXJnaW46IDAgMCAyMHB4IDA7IGxpbmUtaGVpZ2h0OiAxLjI7XFxyXFxuICBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgZ2FwOiAxMnB4O1xcclxcbiAgdGV4dC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjQpO1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAzO1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LXRleHQge1xcclxcbiAgZm9udC1zaXplOiAxNnB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyBsaW5lLWhlaWdodDogMS42O1xcclxcbiAgbWFyZ2luOiAwIDAgMjRweCAwOyBtYXgtd2lkdGg6IDQwMHB4O1xcclxcbiAgbWFyZ2luLWxlZnQ6IGF1dG87IG1hcmdpbi1yaWdodDogYXV0bztcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMztcXHJcXG4gIHRleHQtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50cy1kb3RzIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBnYXA6IDEycHg7XFxyXFxuICBwYWRkaW5nOiAyMHB4IDI0cHg7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCB2YXIoLS1jYXJkKSAwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyKSAxMDAlKTtcXHJcXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LWRvdCB7XFxyXFxuICB3aWR0aDogMTJweDtcXHJcXG4gIGhlaWdodDogMTJweDtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LWRvdDo6YmVmb3JlIHtcXHJcXG4gIGNvbnRlbnQ6ICcnO1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiAwO1xcclxcbiAgbGVmdDogMDtcXHJcXG4gIHJpZ2h0OiAwO1xcclxcbiAgYm90dG9tOiAwO1xcclxcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgdmFyKC0tYnJhbmQpLCB2YXIoLS1hY2NlbnQpKTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG4gIG9wYWNpdHk6IDA7XFxyXFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTtcXHJcXG59XFxyXFxuXFxyXFxuLmFubm91bmNlbWVudC1kb3Q6aG92ZXIge1xcclxcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LWRvdC5hY3RpdmUge1xcclxcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxyXFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMyk7XFxyXFxuICBib3gtc2hhZG93OiAwIDAgMCAycHggcmdiYSgxMjMsIDE5OSwgMjU1LCAwLjMpO1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LWRvdC5hY3RpdmU6OmJlZm9yZSB7XFxyXFxuICBvcGFjaXR5OiAxO1xcclxcbn1cXHJcXG5cXHJcXG4vKiA9PT0gU0lERUJBUiA9PT0gKi9cXHJcXG4uc2lkZWJhci1vdmVybGF5IHtcXHJcXG4gIHBvc2l0aW9uOiBmaXhlZDsgdG9wOiAwOyBsZWZ0OiAwOyByaWdodDogMDsgYm90dG9tOiAwO1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjgpOyAtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjogYmx1cigxMnB4KTsgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEycHgpO1xcclxcbiAgei1pbmRleDogMTAwMDsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcclxcbiAgb3BhY2l0eTogMDsgdmlzaWJpbGl0eTogaGlkZGVuOyB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci1vdmVybGF5Lm9wZW4geyBvcGFjaXR5OiAxOyB2aXNpYmlsaXR5OiB2aXNpYmxlOyB9XFxyXFxuXFxyXFxuLnNpZGViYXIge1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tcGFuZWwpOyBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbiAgLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IGJsdXIoMzBweCk7XFxyXFxuICAgICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cigzMHB4KTsgd2lkdGg6IDMyMHB4OyBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgb3ZlcmZsb3cteTogYXV0bzsgcG9zaXRpb246IHJlbGF0aXZlOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xcclxcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsgYm94LXNoYWRvdzogMCAwIDUwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci5vcGVuIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XFxyXFxuXFxyXFxuLnNpZGViYXItaGVhZGVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gIHBhZGRpbmc6IDIwcHggMjRweDsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxuICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XFxyXFxuICBwb3NpdGlvbjogc3RpY2t5OyB0b3A6IDA7IGJhY2tncm91bmQ6IHZhcigtLXBhbmVsKTsgei1pbmRleDogMTA7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLXVzZXIge1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiAxMnB4OyBmbGV4OiAxIDE7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLWF2YXRhciB7XFxyXFxuICB3aWR0aDogNDhweDsgaGVpZ2h0OiA0OHB4OyBib3JkZXItcmFkaXVzOiAxNnB4O1xcclxcbiAgb2JqZWN0LWZpdDogY292ZXI7IGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLWF2YXRhci1wbGFjZWhvbGRlciB7XFxyXFxuICB3aWR0aDogNDhweDsgaGVpZ2h0OiA0OHB4OyBib3JkZXItcmFkaXVzOiAxNnB4O1xcclxcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgdmFyKC0tYnJhbmQpLCB2YXIoLS1hY2NlbnQpKTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgZm9udC1zaXplOiAyMHB4OyBmb250LXdlaWdodDogNzAwOyBjb2xvcjogd2hpdGU7XFxyXFxuICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci11c2VyLWluZm8geyBmbGV4OiAxIDE7IG1pbi13aWR0aDogMDsgfVxcclxcblxcclxcbi5zaWRlYmFyLXVzZXItbmFtZSB7XFxyXFxuICBmb250LXNpemU6IDE2cHg7IGZvbnQtd2VpZ2h0OiA3MDA7IGNvbG9yOiB2YXIoLS10ZXh0KTtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDJweDsgd2hpdGUtc3BhY2U6IG5vd3JhcDsgb3ZlcmZsb3c6IGhpZGRlbjsgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLXVzZXItaGFuZGxlIHtcXHJcXG4gIGZvbnQtc2l6ZTogMTRweDsgY29sb3I6IHZhcigtLW11dGVkKTtcXHJcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7IG92ZXJmbG93OiBoaWRkZW47IHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci1jbG9zZSB7XFxyXFxuICB3aWR0aDogMzZweDsgaGVpZ2h0OiAzNnB4OyBib3JkZXI6IG5vbmU7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7IGNvbG9yOiB2YXIoLS1tdXRlZCk7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxMnB4OyBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjsgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTsgZm9udC1zaXplOiAxNnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci1jbG9zZTpob3ZlciB7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpO1xcclxcbiAgY29sb3I6IHZhcigtLXRleHQpOyB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci13YWxsZXQgeyBwYWRkaW5nOiAyMHB4IDI0cHg7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyB9XFxyXFxuXFxyXFxuLndhbGxldC1jYXJkIHtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNhcmQpOyBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMTZweDsgcGFkZGluZzogMTZweDsgZGlzcGxheTogZmxleDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IGdhcDogMTJweDsgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTsgcG9zaXRpb246IHJlbGF0aXZlOyBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG4ud2FsbGV0LWNhcmQ6aG92ZXIge1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsgYm9yZGVyLWNvbG9yOiB2YXIoLS1icmFuZCk7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7IGJveC1zaGFkb3c6IDAgOHB4IDI1cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcXHJcXG59XFxyXFxuXFxyXFxuLndhbGxldC1pY29uIHsgZm9udC1zaXplOiAyNHB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDI7IH1cXHJcXG4ud2FsbGV0LWluZm8geyBmbGV4OiAxIDE7IHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMjsgfVxcclxcbi53YWxsZXQtdGl0bGUgeyBmb250LXNpemU6IDE0cHg7IGZvbnQtd2VpZ2h0OiA2MDA7IGNvbG9yOiB2YXIoLS10ZXh0KTsgbWFyZ2luLWJvdHRvbTogMnB4OyB9XFxyXFxuLndhbGxldC1iYWxhbmNlIHsgZm9udC1zaXplOiAxOHB4OyBmb250LXdlaWdodDogNzAwOyBjb2xvcjogdmFyKC0tYnJhbmQpOyB9XFxyXFxuLndhbGxldC1hcnJvdyB7IGNvbG9yOiB2YXIoLS1tdXRlZCk7IGZvbnQtc2l6ZTogMTZweDsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAyOyB9XFxyXFxuXFxyXFxuLnNpZGViYXItY29udGVudCB7IHBhZGRpbmc6IDIwcHggMDsgfVxcclxcbi5zaWRlYmFyLXNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAzMnB4OyB9XFxyXFxuXFxyXFxuLnNpZGViYXItc2VjdGlvbi10aXRsZSB7XFxyXFxuICBmb250LXNpemU6IDEycHg7IGZvbnQtd2VpZ2h0OiA3MDA7IGNvbG9yOiB2YXIoLS1tdXRlZCk7XFxyXFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBsZXR0ZXItc3BhY2luZzogMC41cHg7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAxMnB4OyBwYWRkaW5nOiAwIDI0cHg7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLWl0ZW0ge1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiAxMnB4O1xcclxcbiAgcGFkZGluZzogMTJweCAyNHB4OyBjb2xvcjogdmFyKC0tdGV4dCk7IHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXHJcXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7IHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXItaXRlbTpob3ZlciB7IGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7IGNvbG9yOiB2YXIoLS1icmFuZCk7IH1cXHJcXG4uc2lkZWJhci1pdGVtLWljb24geyBmb250LXNpemU6IDE4cHg7IHdpZHRoOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cXHJcXG5cXHJcXG4uc2lkZWJhci1mb290ZXIge1xcclxcbiAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xcclxcbiAgcG9zaXRpb246IHN0aWNreTsgYm90dG9tOiAwOyBiYWNrZ3JvdW5kOiB2YXIoLS1wYW5lbCk7XFxyXFxuICBib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTsgcGFkZGluZzogMjBweCAyNHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci1hcHAtaW5mbyB7IHRleHQtYWxpZ246IGNlbnRlcjsgfVxcclxcbi5zaWRlYmFyLWFwcC1uYW1lIHsgZm9udC1zaXplOiAxNHB4OyBmb250LXdlaWdodDogNzAwOyBjb2xvcjogdmFyKC0tdGV4dCk7IG1hcmdpbi1ib3R0b206IDJweDsgfVxcclxcbi5zaWRlYmFyLWFwcC12ZXJzaW9uIHsgZm9udC1zaXplOiAxMnB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyB9XFxyXFxuXFxyXFxuLyogPT09IFdBTExFVCBNRU5VID09PSAqL1xcclxcbi53YWxsZXQtb3ZlcmxheSB7XFxyXFxuICBwb3NpdGlvbjogZml4ZWQ7IHRvcDogMDsgbGVmdDogMDsgcmlnaHQ6IDA7IGJvdHRvbTogMDtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC44KTsgLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTJweCk7IGJhY2tkcm9wLWZpbHRlcjogYmx1cigxMnB4KTtcXHJcXG4gIHotaW5kZXg6IDEwMDA7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgb3BhY2l0eTogMDsgdmlzaWJpbGl0eTogaGlkZGVuOyB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xcclxcbn1cXHJcXG5cXHJcXG4ud2FsbGV0LW92ZXJsYXkub3BlbiB7IG9wYWNpdHk6IDE7IHZpc2liaWxpdHk6IHZpc2libGU7IH1cXHJcXG5cXHJcXG4ud2FsbGV0LW1lbnUge1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tcGFuZWwpOyBib3JkZXItcmFkaXVzOiAyNHB4OyBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbiAgYm94LXNoYWRvdzogMCAyNHB4IDgwcHggcmdiYSgwLCAwLCAwLCAwLjYpOyAtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjogYmx1cigzMHB4KTsgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDMwcHgpO1xcclxcbiAgd2lkdGg6IDEwMCU7IG1heC13aWR0aDogNDIwcHg7IG1heC1oZWlnaHQ6IDkwdmg7IG92ZXJmbG93LXk6IGF1dG87XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KSBzY2FsZSgwLjk1KTtcXHJcXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XFxyXFxufVxcclxcblxcclxcbi53YWxsZXQtbWVudS5vcGVuIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEpOyB9XFxyXFxuXFxyXFxuLndhbGxldC1oZWFkZXIge1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcGFkZGluZzogMjBweCAyNHB4O1xcclxcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7IHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTsgcG9zaXRpb246IHN0aWNreTtcXHJcXG4gIHRvcDogMDsgYmFja2dyb3VuZDogdmFyKC0tcGFuZWwpOyB6LWluZGV4OiAxMDtcXHJcXG59XFxyXFxuXFxyXFxuLndhbGxldC1iYWNrIHtcXHJcXG4gIHdpZHRoOiAzNnB4OyBoZWlnaHQ6IDM2cHg7IGJvcmRlcjogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsgY29sb3I6IHZhcigtLXRleHQpO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMTJweDsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7IHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7IGZvbnQtc2l6ZTogMThweDsgbWFyZ2luLXJpZ2h0OiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4ud2FsbGV0LWJhY2s6aG92ZXIgeyBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpOyB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpOyB9XFxyXFxuXFxyXFxuLndhbGxldC1oZWFkZXItdGl0bGUgeyBmb250LXNpemU6IDE4cHg7IGZvbnQtd2VpZ2h0OiA3MDA7IGNvbG9yOiB2YXIoLS10ZXh0KTsgZmxleDogMSAxOyB9XFxyXFxuLndhbGxldC1oZWFkZXItc3BhY2VyIHsgd2lkdGg6IDM2cHg7IH1cXHJcXG5cXHJcXG4ud2FsbGV0LWJhbGFuY2Utc2VjdGlvbiB7IHBhZGRpbmc6IDI0cHg7IH1cXHJcXG5cXHJcXG4uYmFsYW5jZS1jYXJkIHtcXHJcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICM2NjdlZWEgMCUsICM3NjRiYTIgMTAwJSk7XFxyXFxuICBib3JkZXItcmFkaXVzOiAyMHB4OyBwYWRkaW5nOiAyNHB4OyBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiAxNnB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IG92ZXJmbG93OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbi5iYWxhbmNlLWljb24geyBmb250LXNpemU6IDMycHg7IGZpbHRlcjogZHJvcC1zaGFkb3coMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4zKSk7IH1cXHJcXG4uYmFsYW5jZS1pbmZvIHsgZmxleDogMSAxOyBjb2xvcjogd2hpdGU7IH1cXHJcXG4uYmFsYW5jZS1sYWJlbCB7IGZvbnQtc2l6ZTogMTRweDsgZm9udC13ZWlnaHQ6IDYwMDsgb3BhY2l0eTogMC45OyBtYXJnaW4tYm90dG9tOiA0cHg7IH1cXHJcXG4uYmFsYW5jZS1hbW91bnQgeyBmb250LXNpemU6IDI4cHg7IGZvbnQtd2VpZ2h0OiA4MDA7IG1hcmdpbi1ib3R0b206IDRweDsgdGV4dC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMyk7IH1cXHJcXG4uYmFsYW5jZS1zdWJ0aXRsZSB7IGZvbnQtc2l6ZTogMTJweDsgb3BhY2l0eTogMC44OyB9XFxyXFxuXFxyXFxuLndhbGxldC1hY3Rpb25zIHtcXHJcXG4gIGRpc3BsYXk6IGdyaWQ7IGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XFxyXFxuICBncmlkLWdhcDogMTJweDtcXHJcXG4gIGdhcDogMTJweDsgcGFkZGluZzogMCAyNHB4IDI0cHg7XFxyXFxufVxcclxcblxcclxcbi5hY3Rpb24tYnV0dG9uIHtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNhcmQpOyBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMTZweDsgcGFkZGluZzogMTZweCAxMnB4OyBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiA4cHg7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7IHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7IGNvbG9yOiB2YXIoLS10ZXh0KTtcXHJcXG59XFxyXFxuXFxyXFxuLmFjdGlvbi1idXR0b246aG92ZXIge1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsgYm9yZGVyLWNvbG9yOiB2YXIoLS1icmFuZCk7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7IGJveC1zaGFkb3c6IDAgOHB4IDI1cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcXHJcXG59XFxyXFxuXFxyXFxuLmFjdGlvbi1pY29uIHsgZm9udC1zaXplOiAyMHB4OyB9XFxyXFxuLmFjdGlvbi1idXR0b24gc3BhbiB7IGZvbnQtc2l6ZTogMTJweDsgZm9udC13ZWlnaHQ6IDYwMDsgdGV4dC1hbGlnbjogY2VudGVyOyB9XFxyXFxuXFxyXFxuLndhbGxldC1jb250ZW50IHsgcGFkZGluZzogMCAyNHB4IDI0cHg7IH1cXHJcXG4udHJhbnNhY3Rpb25zLXNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAzMnB4OyB9XFxyXFxuXFxyXFxuLnNlY3Rpb24tdGl0bGUge1xcclxcbiAgZm9udC1zaXplOiAxNnB4OyBmb250LXdlaWdodDogNzAwOyBjb2xvcjogdmFyKC0tdGV4dCk7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAxNnB4OyBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBnYXA6IDhweDtcXHJcXG59XFxyXFxuXFxyXFxuLnRyYW5zYWN0aW9uLWxpc3Qge1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tY2FyZCk7IGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxNnB4OyBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG4udHJhbnNhY3Rpb24taXRlbSB7XFxyXFxuICBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBwYWRkaW5nOiAxNnB4O1xcclxcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7IHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4ycyBlYXNlO1xcclxcbn1cXHJcXG5cXHJcXG4udHJhbnNhY3Rpb24taXRlbTpsYXN0LWNoaWxkIHsgYm9yZGVyLWJvdHRvbTogbm9uZTsgfVxcclxcbi50cmFuc2FjdGlvbi1pdGVtOmhvdmVyIHsgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyKTsgfVxcclxcblxcclxcbi50cmFuc2FjdGlvbi1pY29uIHtcXHJcXG4gIHdpZHRoOiA0MHB4OyBoZWlnaHQ6IDQwcHg7IGJvcmRlci1yYWRpdXM6IDEycHg7XFxyXFxuICBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGZvbnQtc2l6ZTogMThweDsgbWFyZ2luLXJpZ2h0OiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4udHJhbnNhY3Rpb24taWNvbi5pbmNvbWUgeyBiYWNrZ3JvdW5kOiByZ2JhKDM0LCAxOTcsIDk0LCAwLjEpOyBjb2xvcjogIzIyYzU1ZTsgfVxcclxcbi50cmFuc2FjdGlvbi1pY29uLmV4cGVuc2UgeyBiYWNrZ3JvdW5kOiByZ2JhKDIzOSwgNjgsIDY4LCAwLjEpOyBjb2xvcjogI2VmNDQ0NDsgfVxcclxcblxcclxcbi50cmFuc2FjdGlvbi1pbmZvIHsgZmxleDogMSAxOyB9XFxyXFxuLnRyYW5zYWN0aW9uLXRpdGxlIHsgZm9udC1zaXplOiAxNHB4OyBmb250LXdlaWdodDogNjAwOyBjb2xvcjogdmFyKC0tdGV4dCk7IG1hcmdpbi1ib3R0b206IDJweDsgfVxcclxcbi50cmFuc2FjdGlvbi1kYXRlIHsgZm9udC1zaXplOiAxMnB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyB9XFxyXFxuLnRyYW5zYWN0aW9uLWFtb3VudCB7IGZvbnQtc2l6ZTogMTRweDsgZm9udC13ZWlnaHQ6IDcwMDsgfVxcclxcbi50cmFuc2FjdGlvbi1hbW91bnQuaW5jb21lIHsgY29sb3I6ICMyMmM1NWU7IH1cXHJcXG4udHJhbnNhY3Rpb24tYW1vdW50LmV4cGVuc2UgeyBjb2xvcjogI2VmNDQ0NDsgfVxcclxcblxcclxcbi50cmFuc2FjdGlvbnMtbG9hZGluZyB7XFxyXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IHBhZGRpbmc6IDQwcHggMjBweDsgY29sb3I6IHZhcigtLW11dGVkKTtcXHJcXG59XFxyXFxuXFxyXFxuLnRyYW5zYWN0aW9ucy1sb2FkaW5nIC5sb2FkaW5nLXNwaW5uZXIge1xcclxcbiAgZm9udC1zaXplOiAyNHB4OyBtYXJnaW4tYm90dG9tOiAxMnB4OyBhbmltYXRpb246IHNwaW4gMXMgbGluZWFyIGluZmluaXRlO1xcclxcbn1cXHJcXG5cXHJcXG5Aa2V5ZnJhbWVzIHNwaW4geyBmcm9tIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH0gdG8geyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9IH1cXHJcXG5cXHJcXG4udHJhbnNhY3Rpb25zLWVtcHR5IHtcXHJcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgcGFkZGluZzogNDBweCAyMHB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpO1xcclxcbn1cXHJcXG5cXHJcXG4uZW1wdHktaWNvbiB7IGZvbnQtc2l6ZTogMzJweDsgbWFyZ2luLWJvdHRvbTogMTJweDsgfVxcclxcbi5lbXB0eS10ZXh0IHsgZm9udC1zaXplOiAxNnB4OyBmb250LXdlaWdodDogNjAwOyBjb2xvcjogdmFyKC0tdGV4dCk7IG1hcmdpbi1ib3R0b206IDhweDsgfVxcclxcbi5lbXB0eS1oaW50IHsgZm9udC1zaXplOiAxMnB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyBsaW5lLWhlaWdodDogMS40OyB9XFxyXFxuXFxyXFxuLnNob3ctYWxsLWJ1dHRvbiB7XFxyXFxuICB3aWR0aDogMTAwJTsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxuICBjb2xvcjogdmFyKC0tbXV0ZWQpOyBwYWRkaW5nOiAxMnB4OyBib3JkZXItcmFkaXVzOiAxMnB4O1xcclxcbiAgZm9udC1zaXplOiAxNHB4OyBmb250LXdlaWdodDogNjAwOyBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlOyBtYXJnaW4tdG9wOiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uc2hvdy1hbGwtYnV0dG9uOmhvdmVyIHtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7IGNvbG9yOiB2YXIoLS10ZXh0KTsgYm9yZGVyLWNvbG9yOiB2YXIoLS1icmFuZCk7XFxyXFxufVxcclxcblxcclxcbi5wYXltZW50LW1ldGhvZHMtc2VjdGlvbiB7IG1hcmdpbi1ib3R0b206IDI0cHg7IH1cXHJcXG5cXHJcXG4ucGF5bWVudC1tZXRob2Qge1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcGFkZGluZzogMTZweDtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNhcmQpOyBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMTZweDsgbWFyZ2luLWJvdHRvbTogMTJweDsgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcXHJcXG59XFxyXFxuXFxyXFxuLnBheW1lbnQtbWV0aG9kOmhvdmVyIHtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7IGJvcmRlci1jb2xvcjogdmFyKC0tYnJhbmQpO1xcclxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcHgpO1xcclxcbn1cXHJcXG5cXHJcXG4ucGF5bWVudC1pY29uIHtcXHJcXG4gIHdpZHRoOiA0MHB4OyBoZWlnaHQ6IDQwcHg7IGJvcmRlci1yYWRpdXM6IDEycHg7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDEyMywgMTk5LCAyNTUsIDAuMSk7IGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGZvbnQtc2l6ZTogMThweDsgbWFyZ2luLXJpZ2h0OiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4ucGF5bWVudC1pbmZvIHsgZmxleDogMSAxOyB9XFxyXFxuLnBheW1lbnQtbmFtZSB7IGZvbnQtc2l6ZTogMTRweDsgZm9udC13ZWlnaHQ6IDYwMDsgY29sb3I6IHZhcigtLXRleHQpOyBtYXJnaW4tYm90dG9tOiAycHg7IH1cXHJcXG4ucGF5bWVudC1kZXNjIHsgZm9udC1zaXplOiAxMnB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyB9XFxyXFxuLnBheW1lbnQtYXJyb3cgeyBjb2xvcjogdmFyKC0tbXV0ZWQpOyBmb250LXNpemU6IDE2cHg7IH1cXHJcXG5cXHJcXG4vKiA9PT0gQlVUVE9OUyA9PT0gKi9cXHJcXG4ucm93eyBkaXNwbGF5OmZsZXg7IGZsZXgtd3JhcDp3cmFwOyBnYXA6MTJweDsgbWFyZ2luLXRvcDoyMnB4OyB9XFxyXFxuLmJ0bntcXHJcXG4gIGRpc3BsYXk6aW5saW5lLWZsZXg7IGFsaWduLWl0ZW1zOmNlbnRlcjsgZ2FwOjEwcHg7XFxyXFxuICBwYWRkaW5nOjEycHggMjBweDsgYm9yZGVyLXJhZGl1czoxMnB4OyBmb250LXdlaWdodDo2MDA7IGZvbnQtc2l6ZToxNXB4O1xcclxcbiAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IHRyYW5zaXRpb246YWxsIDAuMnMgZWFzZTsgYm9yZGVyOm5vbmU7IGN1cnNvcjpwb2ludGVyO1xcclxcbn1cXHJcXG4uYnRuOmRpc2FibGVkeyBvcGFjaXR5Oi41OyBjdXJzb3I6bm90LWFsbG93ZWQ7IH1cXHJcXG4uYnRuLXByaW1hcnl7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCB2YXIoLS1icmFuZCksIHZhcigtLWFjY2VudCkpO1xcclxcbiAgY29sb3I6I2ZmZjsgYm94LXNoYWRvdzowIDZweCAyMHB4IHJnYmEoMTI1LDIwMCwyNTUsLjMpO1xcclxcbn1cXHJcXG4uYnRuLXByaW1hcnk6aG92ZXI6bm90KDpkaXNhYmxlZCl7XFxyXFxuICB0cmFuc2Zvcm06dHJhbnNsYXRlWSgtMnB4KTsgYm94LXNoYWRvdzowIDEycHggMzVweCByZ2JhKDEyNSwyMDAsMjU1LC40KTtcXHJcXG59XFxyXFxuLmJ0bi1naG9zdHtcXHJcXG4gIGJhY2tncm91bmQ6dmFyKC0tY2FyZCk7IGNvbG9yOnZhcigtLXRleHQpOyBib3JkZXI6MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxufVxcclxcbi5idG4tZ2hvc3Q6aG92ZXJ7IGJhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuMDgpOyBjb2xvcjp2YXIoLS1icmFuZCk7IH1cXHJcXG5cXHJcXG4vKiA9PT0gVFlQT0dSQVBIWSA9PT0gKi9cXHJcXG4uaDF7IG1hcmdpbjo4cHggMCAxMHB4OyBmb250LXNpemU6IGNsYW1wKDI4cHgsIDUuOHZ3LCA0NHB4KTsgbGluZS1oZWlnaHQ6MS4xOyBmb250LXdlaWdodDo5MDA7IH1cXHJcXG4ubGVhZHsgY29sb3I6dmFyKC0tbXV0ZWQpOyBmb250LXNpemU6MTZweDsgbWF4LXdpZHRoOjU1Y2g7IH1cXHJcXG4uYnJhbmR7IGRpc3BsYXk6aW5saW5lLWZsZXg7IGFsaWduLWl0ZW1zOmNlbnRlcjsgZ2FwOjEwcHg7IGZvbnQtd2VpZ2h0OjgwMDsgY29sb3I6dmFyKC0tbXV0ZWQpOyBtYXJnaW4tYm90dG9tOjEwcHg7IH1cXHJcXG4uYmFkZ2V7IGRpc3BsYXk6aW5saW5lLWZsZXg7IGFsaWduLWl0ZW1zOmNlbnRlcjsgZ2FwOjhweDsgcGFkZGluZzo2cHggMTBweDsgZm9udC1zaXplOjEycHg7IGZvbnQtd2VpZ2h0OjcwMDsgY29sb3I6IzBiMTIyMDsgYm9yZGVyLXJhZGl1czo5OTlweDsgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCB2YXIoLS1icmFuZCksIHZhcigtLWFjY2VudCkpOyB9XFxyXFxuXFxyXFxuLyogPT09IExPQURJTkcgPT09ICovXFxyXFxuLm92ZXJsYXl7IHBvc2l0aW9uOmZpeGVkOyB0b3A6MDsgbGVmdDowOyByaWdodDowOyBib3R0b206MDsgei1pbmRleDo5OTk5OyBkaXNwbGF5OmZsZXg7IGFsaWduLWl0ZW1zOmNlbnRlcjsganVzdGlmeS1jb250ZW50OmNlbnRlcjsgYW5pbWF0aW9uOiBmYWRlSW4gMC4ycyBlYXNlOyB9XFxyXFxuLm92ZXJsYXktYmFja2Ryb3B7IHBvc2l0aW9uOmFic29sdXRlOyB0b3A6MDsgbGVmdDowOyByaWdodDowOyBib3R0b206MDsgYmFja2dyb3VuZDpyZ2JhKDAsMCwwLDAuOCk7IC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyOmJsdXIoMTJweCk7IGJhY2tkcm9wLWZpbHRlcjpibHVyKDEycHgpOyB9XFxyXFxuLm92ZXJsYXktcGFuZWx7IHBvc2l0aW9uOnJlbGF0aXZlOyB6LWluZGV4OjE7IHRleHQtYWxpZ246Y2VudGVyOyBhbmltYXRpb246IHNsaWRlVXAgMC4zcyBlYXNlOyB9XFxyXFxuLm92ZXJsYXktaGludHsgbWFyZ2luLXRvcDoxNnB4OyBjb2xvcjp2YXIoLS1tdXRlZCk7IGZvbnQtc2l6ZToxNHB4OyB9XFxyXFxuQGtleWZyYW1lcyBmYWRlSW57IGZyb217b3BhY2l0eTowfSB0b3tvcGFjaXR5OjF9IH1cXHJcXG5Aa2V5ZnJhbWVzIHNsaWRlVXB7IGZyb217b3BhY2l0eTowOyB0cmFuc2Zvcm06dHJhbnNsYXRlWSgyMHB4KX0gdG97b3BhY2l0eToxOyB0cmFuc2Zvcm06dHJhbnNsYXRlWSgwKX0gfVxcclxcblxcclxcbi5mb290eyBtYXJnaW4tdG9wOjMycHg7IGZvbnQtc2l6ZToxNHB4OyBjb2xvcjp2YXIoLS1tdXRlZCk7IGxpbmUtaGVpZ2h0OjEuNTsgfVxcclxcbi5mb290IGF7IGNvbG9yOnZhcigtLWJyYW5kKTsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IH1cXHJcXG4uZm9vdCBhOmhvdmVyeyB0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOyB9XFxyXFxuXFxyXFxuLyogPT09IFJFU1BPTlNJVkUgPT09ICovXFxyXFxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XFxyXFxuICAuaGVybyB7IHBhZGRpbmc6IDE2cHggMTJweDsgfVxcclxcbiAgLmdyaWQgeyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjsgZ2FwOiAxNnB4OyBtYXJnaW4tdG9wOiAyNHB4OyB9XFxyXFxuICAudGlsZSB7IHBhZGRpbmc6IDIwcHg7IH1cXHJcXG4gIC50b3BiYXItbGVmdCB7IGdhcDogOHB4OyB9XFxyXFxuICAuaGVsbG8taGkgeyBmb250LXNpemU6IDE1cHg7IH1cXHJcXG4gIC5oZWxsby1zdWIgeyBmb250LXNpemU6IDEycHg7IH1cXHJcXG4gIC5hbm5vdW5jZW1lbnRzLXNsaWRlciB7IGhlaWdodDogMjQwcHg7IH1cXHJcXG4gIC5hbm5vdW5jZW1lbnQtY2FyZCB7IHBhZGRpbmc6IDMycHggMjBweDsgfVxcclxcbiAgLmFubm91bmNlbWVudC10aXRsZSB7IGZvbnQtc2l6ZTogMjBweDsgfVxcclxcbiAgLmFubm91bmNlbWVudC10ZXh0IHsgZm9udC1zaXplOiAxNHB4OyBtYXgtd2lkdGg6IDI4MHB4OyB9XFxyXFxuICAuc2lkZWJhciB7IHdpZHRoOiAyODBweDsgfVxcclxcbiAgLnNpZGViYXItaGVhZGVyIHsgcGFkZGluZzogMTZweCAyMHB4OyB9XFxyXFxuICAuc2lkZWJhci13YWxsZXQgeyBwYWRkaW5nOiAxNnB4IDIwcHg7IH1cXHJcXG4gIC5zaWRlYmFyLXNlY3Rpb24tdGl0bGUgeyBwYWRkaW5nOiAwIDIwcHg7IH1cXHJcXG4gIC5zaWRlYmFyLWl0ZW0geyBwYWRkaW5nOiAxMnB4IDIwcHg7IH1cXHJcXG4gIC5zaWRlYmFyLWZvb3RlciB7IHBhZGRpbmc6IDE2cHggMjBweDsgfVxcclxcbiAgLndhbGxldC1vdmVybGF5IHsgcGFkZGluZzogMTZweDsgfVxcclxcbiAgLndhbGxldC1tZW51IHsgYm9yZGVyLXJhZGl1czogMjBweDsgbWF4LWhlaWdodDogOTV2aDsgfVxcclxcbiAgLndhbGxldC1oZWFkZXIgeyBwYWRkaW5nOiAxNnB4IDIwcHg7IH1cXHJcXG4gIC53YWxsZXQtYmFsYW5jZS1zZWN0aW9uIHsgcGFkZGluZzogMjBweDsgfVxcclxcbiAgLmJhbGFuY2UtY2FyZCB7IHBhZGRpbmc6IDIwcHg7IH1cXHJcXG4gIC5iYWxhbmNlLWFtb3VudCB7IGZvbnQtc2l6ZTogMjRweDsgfVxcclxcbiAgLndhbGxldC1hY3Rpb25zIHsgcGFkZGluZzogMCAyMHB4IDIwcHg7IGdhcDogMTBweDsgfVxcclxcbiAgLmFjdGlvbi1idXR0b24geyBwYWRkaW5nOiAxNHB4IDEwcHg7IH1cXHJcXG4gIC5hY3Rpb24taWNvbiB7IGZvbnQtc2l6ZTogMThweDsgfVxcclxcbiAgLmFjdGlvbi1idXR0b24gc3BhbiB7IGZvbnQtc2l6ZTogMTFweDsgfVxcclxcbiAgLndhbGxldC1jb250ZW50IHsgcGFkZGluZzogMCAyMHB4IDIwcHg7IH1cXHJcXG4gIC50cmFuc2FjdGlvbi1pdGVtIHsgcGFkZGluZzogMTRweDsgfVxcclxcbiAgLnBheW1lbnQtbWV0aG9kIHsgcGFkZGluZzogMTRweDsgfVxcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vc3R5bGVzL2dsb2JhbHMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLHdCQUF3QjtBQUN4QixJQUFJLHNCQUFzQixFQUFFO0FBQzVCLE9BQU8sWUFBWSxFQUFFO0FBQ3JCLE9BQU8sZ0JBQWdCLEVBQUU7QUFDekIsVUFBVSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxVQUFVLEVBQUU7O0FBRTdEO0VBQ0UsYUFBYTtFQUNiLDRCQUE0QjtFQUM1Qiw4QkFBOEI7RUFDOUIsZ0NBQWdDO0VBQ2hDLGVBQWU7RUFDZiw4QkFBOEI7RUFDOUIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFFBQVE7RUFDUiw4RkFBOEY7RUFDOUYsaUJBQWlCO0VBQ2pCLHVCQUF1QjtFQUN2QixrQkFBa0I7QUFDcEI7O0FBRUEscUJBQXFCO0FBQ3JCO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixNQUFNLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxTQUFTO0VBQ3BDLFdBQVc7RUFDWCxvR0FBb0c7QUFDdEc7O0FBRUEsWUFBWSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRTs7QUFFbEU7RUFDRSxXQUFXLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLGtCQUFrQjtFQUNuRSxrQkFBa0IsRUFBRSxnQkFBZ0IsRUFBRSx1QkFBdUI7RUFDN0QsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGtCQUFrQjtBQUNwRDs7QUFFQSxtQkFBbUI7QUFDbkI7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsVUFBVTtBQUNaOztBQUVBO0VBQ0Us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QzVCLFFBQVEsMEJBQTBCLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO0VBQ2pFLFFBQVEsYUFBYSxFQUFFO0VBQ3ZCLGVBQWUsUUFBUSxFQUFFO0VBQ3pCLFlBQVksZUFBZSxFQUFFO0VBQzdCLGFBQWEsZUFBZSxFQUFFO0VBQzlCLHdCQUF3QixhQUFhLEVBQUU7RUFDdkMscUJBQXFCLGtCQUFrQixFQUFFO0VBQ3pDLHNCQUFzQixlQUFlLEVBQUU7RUFDdkMscUJBQXFCLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRTtFQUN4RCxXQUFXLFlBQVksRUFBRTtFQUN6QixrQkFBa0Isa0JBQWtCLEVBQUU7RUFDdEMsa0JBQWtCLGtCQUFrQixFQUFFO0VBQ3RDLHlCQUF5QixlQUFlLEVBQUU7RUFDMUMsZ0JBQWdCLGtCQUFrQixFQUFFO0VBQ3BDLGtCQUFrQixrQkFBa0IsRUFBRTtFQUN0QyxrQkFBa0IsYUFBYSxFQUFFO0VBQ2pDLGVBQWUsbUJBQW1CLEVBQUUsZ0JBQWdCLEVBQUU7RUFDdEQsaUJBQWlCLGtCQUFrQixFQUFFO0VBQ3JDLDBCQUEwQixhQUFhLEVBQUU7RUFDekMsZ0JBQWdCLGFBQWEsRUFBRTtFQUMvQixrQkFBa0IsZUFBZSxFQUFFO0VBQ25DLGtCQUFrQixvQkFBb0IsRUFBRSxTQUFTLEVBQUU7RUFDbkQsaUJBQWlCLGtCQUFrQixFQUFFO0VBQ3JDLGVBQWUsZUFBZSxFQUFFO0VBQ2hDLHNCQUFzQixlQUFlLEVBQUU7RUFDdkMsa0JBQWtCLG9CQUFvQixFQUFFO0VBQ3hDLG9CQUFvQixhQUFhLEVBQUU7RUFDbkMsa0JBQWtCLGFBQWEsRUFBRTtBQUNuQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiA9PT0gQkFTRSBTVFlMRVMgPT09ICovXFxyXFxuKiB7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cXHJcXG5odG1sIHsgaGVpZ2h0OiAxMDAlOyB9XFxyXFxuYm9keSB7IG1pbi1oZWlnaHQ6IDEwMCU7IH1cXHJcXG4jX19uZXh0IHsgbWluLWhlaWdodDogMTAwdmg7IHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMDsgfVxcclxcblxcclxcbjpyb290e1xcclxcbiAgLS1iZzogIzBhMGYxOTtcXHJcXG4gIC0tcGFuZWw6IHJnYmEoMjAsMjgsNDYsMC45MCk7XFxyXFxuICAtLWNhcmQ6IHJnYmEoMjU1LDI1NSwyNTUsMC4wNik7XFxyXFxuICAtLWJvcmRlcjogcmdiYSgyNTUsMjU1LDI1NSwwLjEyKTtcXHJcXG4gIC0tdGV4dDogI2U5ZWVmNztcXHJcXG4gIC0tbXV0ZWQ6IHJnYmEoMjMzLDIzOCwyNDcsLjc1KTtcXHJcXG4gIC0tYnJhbmQ6ICM3YmM3ZmY7XFxyXFxuICAtLWFjY2VudDogI2I3YTNmZjtcXHJcXG59XFxyXFxuXFxyXFxuYm9keXtcXHJcXG4gIG1hcmdpbjowO1xcclxcbiAgZm9udC1mYW1pbHk6IEludGVyLCBzeXN0ZW0tdWksIC1hcHBsZS1zeXN0ZW0sIFNlZ29lIFVJLCBSb2JvdG8sIEFyaWFsLCBcXFwiTm90byBTYW5zXFxcIiwgc2Fucy1zZXJpZjtcXHJcXG4gIGNvbG9yOnZhcigtLXRleHQpO1xcclxcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxufVxcclxcblxcclxcbi8qIEZpeGVkIGJhY2tncm91bmQgKi9cXHJcXG5ib2R5OjpiZWZvcmV7XFxyXFxuICBjb250ZW50OiAnJztcXHJcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gIHRvcDogMDsgbGVmdDogMDsgcmlnaHQ6IDA7IGJvdHRvbTogMDtcXHJcXG4gIHotaW5kZXg6IC0yO1xcclxcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzBhMGYxOSAwJSwgIzE2Mjc0NSAyNSUsICMxMTI0M2QgNTAlLCAjMGYxZTNhIDc1JSwgIzBhMGYxOSAxMDAlKTtcXHJcXG59XFxyXFxuXFxyXFxuLmNvbnRhaW5lcnsgbWluLWhlaWdodDoxMDB2aDsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDA7IG1hcmdpbjogMDsgfVxcclxcblxcclxcbi5oZXJve1xcclxcbiAgd2lkdGg6IDEwMCU7IG1heC13aWR0aDogbm9uZTsgbWluLWhlaWdodDogMTAwdmg7IHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIHBhZGRpbmc6IDIwcHggMTZweDsgYm9yZGVyLXJhZGl1czogMDsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxyXFxuICBib3JkZXI6IG5vbmU7IGJveC1zaGFkb3c6IG5vbmU7IG92ZXJmbG93LXg6IGhpZGRlbjtcXHJcXG59XFxyXFxuXFxyXFxuLyogPT09IFRPUEJBUiA9PT0gKi9cXHJcXG4udG9wYmFyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgbWFyZ2luLWJvdHRvbTogMjRweDtcXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxufVxcclxcblxcclxcbi50b3BiYXItbGVmdCB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGdhcDogMTJweDtcXHJcXG59XFxyXFxuXFxyXFxuLm1lbnUtYnV0dG9uIHtcXHJcXG4gIHdpZHRoOiA0MHB4OyBoZWlnaHQ6IDQwcHg7IGJvcmRlcjogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNhcmQpOyBjb2xvcjogdmFyKC0tdGV4dCk7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxMnB4OyBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjsgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTsgZm9udC1zaXplOiAxNnB4O1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTtcXHJcXG59XFxyXFxuXFxyXFxuLm1lbnUtYnV0dG9uOmhvdmVyIHtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wOCk7XFxyXFxuICBjb2xvcjogdmFyKC0tYnJhbmQpO1xcclxcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcXHJcXG59XFxyXFxuXFxyXFxuLmF2YXRhciB7XFxyXFxuICB3aWR0aDogNDBweDsgaGVpZ2h0OiA0MHB4OyBib3JkZXItcmFkaXVzOiAxMnB4O1xcclxcbiAgb2JqZWN0LWZpdDogY292ZXI7IGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxufVxcclxcblxcclxcbi5oZWxsbyB7IGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IGdhcDogMnB4OyB9XFxyXFxuLmhlbGxvLWhpIHsgZm9udC1zaXplOiAxNnB4OyBmb250LXdlaWdodDogNzAwOyBjb2xvcjogdmFyKC0tdGV4dCk7IGxpbmUtaGVpZ2h0OiAxLjI7IH1cXHJcXG4uaGVsbG8tc3ViIHsgZm9udC1zaXplOiAxM3B4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyBsaW5lLWhlaWdodDogMS4yOyB9XFxyXFxuXFxyXFxuLyogPT09IEdSSUQgPT09ICovXFxyXFxuLmdyaWQge1xcclxcbiAgZGlzcGxheTogZ3JpZDtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMjgwcHgsIDFmcikpO1xcclxcbiAgZ2FwOiAyMHB4O1xcclxcbiAgbWFyZ2luLXRvcDogMzJweDtcXHJcXG59XFxyXFxuXFxyXFxuLyogPT09IFRJTEVTID09PSAqL1xcclxcbi50aWxlIHtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLXBhbmVsKTtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxuICBib3JkZXItcmFkaXVzOiAyNHB4O1xcclxcbiAgcGFkZGluZzogMjhweDtcXHJcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXHJcXG4gIGNvbG9yOiB2YXIoLS10ZXh0KTtcXHJcXG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDMwcHgpO1xcclxcbiAgYm94LXNoYWRvdzogMCAyMHB4IDYwcHggcmdiYSgwLCAwLCAwLCAwLjQpLCAwIDhweCAzMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgZ2FwOiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZTpob3ZlciB7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTZweCkgc2NhbGUoMS4wMik7XFxyXFxuICBib3gtc2hhZG93OiAwIDI1cHggODBweCByZ2JhKDAsIDAsIDAsIDAuNSksIDAgMTJweCA0MHB4IHJnYmEoMTIzLCAxOTksIDI1NSwgMC4yKTtcXHJcXG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYnJhbmQpO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS1pY29uIHtcXHJcXG4gIGZvbnQtc2l6ZTogMzZweDsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAyO1xcclxcbiAgZmlsdGVyOiBkcm9wLXNoYWRvdygwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC40KSk7XFxyXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZTpob3ZlciAudGlsZS1pY29uIHtcXHJcXG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKSByb3RhdGUoNWRlZyk7XFxyXFxufVxcclxcblxcclxcbi50aWxlLWhlYWQge1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgZ2FwOiAxMnB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDI7XFxyXFxufVxcclxcblxcclxcbi50aWxlLXRpdGxlIHtcXHJcXG4gIGZvbnQtc2l6ZTogMjJweDsgZm9udC13ZWlnaHQ6IDkwMDsgY29sb3I6IHZhcigtLXRleHQpOyBtYXJnaW46IDA7XFxyXFxuICB0ZXh0LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcXHJcXG59XFxyXFxuXFxyXFxuLnRpbGUtYmFkZ2Uge1xcclxcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjZmY2YjZiLCAjZmY4ZThlKTtcXHJcXG4gIGNvbG9yOiB3aGl0ZTsgZm9udC1zaXplOiAxMXB4OyBmb250LXdlaWdodDogNzAwO1xcclxcbiAgcGFkZGluZzogNHB4IDhweDsgYm9yZGVyLXJhZGl1czogOHB4OyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcclxcbiAgYW5pbWF0aW9uOiBwdWxzZSAycyBlYXNlLWluLW91dCBpbmZpbml0ZTtcXHJcXG59XFxyXFxuXFxyXFxuQGtleWZyYW1lcyBwdWxzZSB7IDAlLCAxMDAlIHsgb3BhY2l0eTogMTsgfSA1MCUgeyBvcGFjaXR5OiAwLjg7IH0gfVxcclxcblxcclxcbi50aWxlLWRlc2Mge1xcclxcbiAgZm9udC1zaXplOiAxNXB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyBsaW5lLWhlaWdodDogMS42O1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAyOyBtYXJnaW46IDA7XFxyXFxufVxcclxcblxcclxcbi50aWxlLWxpc3Qge1xcclxcbiAgbGlzdC1zdHlsZTogbm9uZTsgcGFkZGluZzogMDsgbWFyZ2luOiAwOyBwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDI7XFxyXFxufVxcclxcblxcclxcbi50aWxlLWxpc3QgbGkge1xcclxcbiAgZm9udC1zaXplOiAxNHB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyBsaW5lLWhlaWdodDogMS42OyBtYXJnaW4tYm90dG9tOiA4cHg7XFxyXFxufVxcclxcblxcclxcbi8qIFRpbGUgY29sb3JzICovXFxyXFxuLnRpbGUtYXVjdGlvbiB7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCByZ2JhKDI1NSwgMTA3LCAxMDcsIDAuMTUpIDAlLCByZ2JhKDI1NSwgMTQyLCAxNDIsIDAuMDgpIDEwMCUpO1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDEwNywgMTA3LCAwLjIpO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS1naWZ0cyB7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCByZ2JhKDEyMywgMTk5LCAyNTUsIDAuMTUpIDAlLCByZ2JhKDEyMywgMTk5LCAyNTUsIDAuMDgpIDEwMCUpO1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxMjMsIDE5OSwgMjU1LCAwLjIpO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS1wbGFucyB7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCByZ2JhKDE4MywgMTYzLCAyNTUsIDAuMTUpIDAlLCByZ2JhKDE4MywgMTYzLCAyNTUsIDAuMDgpIDEwMCUpO1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxODMsIDE2MywgMjU1LCAwLjIpO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS1vcmRlcnMge1xcclxcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgcmdiYSgzNCwgMTk3LCA5NCwgMC4xNSkgMCUsIHJnYmEoMzQsIDE5NywgOTQsIDAuMDgpIDEwMCUpO1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgzNCwgMTk3LCA5NCwgMC4yKTtcXHJcXG59XFxyXFxuXFxyXFxuLnRpbGUtY3JlYXRlIHtcXHJcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHJnYmEoMjU1LCAxOTMsIDcsIDAuMTUpIDAlLCByZ2JhKDI1NSwgMTkzLCA3LCAwLjA4KSAxMDAlKTtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAxOTMsIDcsIDAuMik7XFxyXFxufVxcclxcblxcclxcbi8qID09PSBBTk5PVU5DRU1FTlRTID09PSAqL1xcclxcbi5hbm5vdW5jZW1lbnRzLWNvbnRhaW5lciB7IG1hcmdpbi10b3A6IDMycHg7IH1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50cy1oZWFkZXIge1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgbWFyZ2luLWJvdHRvbTogMjBweDsgcGFkZGluZzogMCA0cHg7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnRzLXRpdGxlIHtcXHJcXG4gIGZvbnQtc2l6ZTogMThweDsgZm9udC13ZWlnaHQ6IDgwMDsgY29sb3I6IHZhcigtLXRleHQpO1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50cy1jb3VudGVyIHtcXHJcXG4gIGZvbnQtc2l6ZTogMTJweDsgY29sb3I6IHZhcigtLWJyYW5kKTtcXHJcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHJnYmEoMTIzLCAxOTksIDI1NSwgMC4xNSksIHJnYmEoMTgzLCAxNjMsIDI1NSwgMC4xNSkpO1xcclxcbiAgcGFkZGluZzogNnB4IDEycHg7IGJvcmRlci1yYWRpdXM6IDE2cHg7XFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDEyMywgMTk5LCAyNTUsIDAuMyk7XFxyXFxuICBmb250LXdlaWdodDogNzAwOyBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCk7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnRzLXNsaWRlciB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IGJhY2tncm91bmQ6IHZhcigtLXBhbmVsKTtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7IGJvcmRlci1yYWRpdXM6IDI0cHg7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuOyBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMzBweCk7XFxyXFxuICBib3gtc2hhZG93OiAwIDIwcHggNjBweCByZ2JhKDAsIDAsIDAsIDAuNCksIDAgOHB4IDMycHggcmdiYSgxMjMsIDE5OSwgMjU1LCAwLjEpO1xcclxcbiAgaGVpZ2h0OiAyODBweDsgdG91Y2gtYWN0aW9uOiBwYW4teDtcXHJcXG59XFxyXFxuXFxyXFxuLmFubm91bmNlbWVudHMtd3JhcHBlciB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTsgfVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnQtY2FyZCB7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDsgbGVmdDogMDsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTtcXHJcXG4gIHBhZGRpbmc6IDQwcHggMzJweDsgZGlzcGxheTogZmxleDsgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlOyBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCB2YXIoLS10eXBlLWNvbG9yLCByZ2JhKDEyMywgMTk5LCAyNTUsIDAuMSkpIDAlLCB0cmFuc3BhcmVudCAxMDAlKTtcXHJcXG4gIHotaW5kZXg6IDI7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnQtY2FyZC5hY3RpdmUge1xcclxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKSBzY2FsZSgxKSAhaW1wb3J0YW50O1xcclxcbiAgb3BhY2l0eTogMSAhaW1wb3J0YW50OyB6LWluZGV4OiAxMCAhaW1wb3J0YW50O1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LWNvbnRlbnQgeyBwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDI7IH1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LXR5cGUtYmFkZ2Uge1xcclxcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyBmb250LXNpemU6IDEwcHg7IGZvbnQtd2VpZ2h0OiA3MDA7XFxyXFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBwYWRkaW5nOiA0cHggOHB4OyBib3JkZXItcmFkaXVzOiA4cHg7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7IGNvbG9yOiB2YXIoLS10ZXh0KTtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDEycHg7IGxldHRlci1zcGFjaW5nOiAwLjVweDtcXHJcXG59XFxyXFxuXFxyXFxuLmFubm91bmNlbWVudC10aXRsZSB7XFxyXFxuICBmb250LXNpemU6IDI0cHg7IGZvbnQtd2VpZ2h0OiA5MDA7IGNvbG9yOiB2YXIoLS10ZXh0KTtcXHJcXG4gIG1hcmdpbjogMCAwIDIwcHggMDsgbGluZS1oZWlnaHQ6IDEuMjtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBnYXA6IDEycHg7XFxyXFxuICB0ZXh0LXNoYWRvdzogMCA0cHggMTJweCByZ2JhKDAsIDAsIDAsIDAuNCk7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDM7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnQtdGV4dCB7XFxyXFxuICBmb250LXNpemU6IDE2cHg7IGNvbG9yOiB2YXIoLS1tdXRlZCk7IGxpbmUtaGVpZ2h0OiAxLjY7XFxyXFxuICBtYXJnaW46IDAgMCAyNHB4IDA7IG1heC13aWR0aDogNDAwcHg7XFxyXFxuICBtYXJnaW4tbGVmdDogYXV0bzsgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAzO1xcclxcbiAgdGV4dC1zaGFkb3c6IDAgMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMyk7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnRzLWRvdHMge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGdhcDogMTJweDtcXHJcXG4gIHBhZGRpbmc6IDIwcHggMjRweDtcXHJcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHZhcigtLWNhcmQpIDAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDIpIDEwMCUpO1xcclxcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnQtZG90IHtcXHJcXG4gIHdpZHRoOiAxMnB4O1xcclxcbiAgaGVpZ2h0OiAxMnB4O1xcclxcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnQtZG90OjpiZWZvcmUge1xcclxcbiAgY29udGVudDogJyc7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICB0b3A6IDA7XFxyXFxuICBsZWZ0OiAwO1xcclxcbiAgcmlnaHQ6IDA7XFxyXFxuICBib3R0b206IDA7XFxyXFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCB2YXIoLS1icmFuZCksIHZhcigtLWFjY2VudCkpO1xcclxcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcclxcbiAgb3BhY2l0eTogMDtcXHJcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xcclxcbn1cXHJcXG5cXHJcXG4uYW5ub3VuY2VtZW50LWRvdDpob3ZlciB7XFxyXFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnQtZG90LmFjdGl2ZSB7XFxyXFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXHJcXG4gIHRyYW5zZm9ybTogc2NhbGUoMS4zKTtcXHJcXG4gIGJveC1zaGFkb3c6IDAgMCAwIDJweCByZ2JhKDEyMywgMTk5LCAyNTUsIDAuMyk7XFxyXFxufVxcclxcblxcclxcbi5hbm5vdW5jZW1lbnQtZG90LmFjdGl2ZTo6YmVmb3JlIHtcXHJcXG4gIG9wYWNpdHk6IDE7XFxyXFxufVxcclxcblxcclxcbi8qID09PSBTSURFQkFSID09PSAqL1xcclxcbi5zaWRlYmFyLW92ZXJsYXkge1xcclxcbiAgcG9zaXRpb246IGZpeGVkOyB0b3A6IDA7IGxlZnQ6IDA7IHJpZ2h0OiAwOyBib3R0b206IDA7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuOCk7IGJhY2tkcm9wLWZpbHRlcjogYmx1cigxMnB4KTtcXHJcXG4gIHotaW5kZXg6IDEwMDA7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXHJcXG4gIG9wYWNpdHk6IDA7IHZpc2liaWxpdHk6IGhpZGRlbjsgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXItb3ZlcmxheS5vcGVuIHsgb3BhY2l0eTogMTsgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxcclxcblxcclxcbi5zaWRlYmFyIHtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLXBhbmVsKTsgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTtcXHJcXG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigzMHB4KTsgd2lkdGg6IDMyMHB4OyBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgb3ZlcmZsb3cteTogYXV0bzsgcG9zaXRpb246IHJlbGF0aXZlOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xcclxcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsgYm94LXNoYWRvdzogMCAwIDUwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci5vcGVuIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApOyB9XFxyXFxuXFxyXFxuLnNpZGViYXItaGVhZGVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gIHBhZGRpbmc6IDIwcHggMjRweDsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxuICBwb3NpdGlvbjogc3RpY2t5OyB0b3A6IDA7IGJhY2tncm91bmQ6IHZhcigtLXBhbmVsKTsgei1pbmRleDogMTA7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLXVzZXIge1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiAxMnB4OyBmbGV4OiAxO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci1hdmF0YXIge1xcclxcbiAgd2lkdGg6IDQ4cHg7IGhlaWdodDogNDhweDsgYm9yZGVyLXJhZGl1czogMTZweDtcXHJcXG4gIG9iamVjdC1maXQ6IGNvdmVyOyBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci1hdmF0YXItcGxhY2Vob2xkZXIge1xcclxcbiAgd2lkdGg6IDQ4cHg7IGhlaWdodDogNDhweDsgYm9yZGVyLXJhZGl1czogMTZweDtcXHJcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHZhcigtLWJyYW5kKSwgdmFyKC0tYWNjZW50KSk7XFxyXFxuICBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGZvbnQtc2l6ZTogMjBweDsgZm9udC13ZWlnaHQ6IDcwMDsgY29sb3I6IHdoaXRlO1xcclxcbiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tYm9yZGVyKTtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXItdXNlci1pbmZvIHsgZmxleDogMTsgbWluLXdpZHRoOiAwOyB9XFxyXFxuXFxyXFxuLnNpZGViYXItdXNlci1uYW1lIHtcXHJcXG4gIGZvbnQtc2l6ZTogMTZweDsgZm9udC13ZWlnaHQ6IDcwMDsgY29sb3I6IHZhcigtLXRleHQpO1xcclxcbiAgbWFyZ2luLWJvdHRvbTogMnB4OyB3aGl0ZS1zcGFjZTogbm93cmFwOyBvdmVyZmxvdzogaGlkZGVuOyB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXItdXNlci1oYW5kbGUge1xcclxcbiAgZm9udC1zaXplOiAxNHB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpO1xcclxcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgb3ZlcmZsb3c6IGhpZGRlbjsgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLWNsb3NlIHtcXHJcXG4gIHdpZHRoOiAzNnB4OyBoZWlnaHQ6IDM2cHg7IGJvcmRlcjogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsgY29sb3I6IHZhcigtLW11dGVkKTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDEycHg7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyOyB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlOyBmb250LXNpemU6IDE2cHg7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLWNsb3NlOmhvdmVyIHtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSk7XFxyXFxuICBjb2xvcjogdmFyKC0tdGV4dCk7IHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLXdhbGxldCB7IHBhZGRpbmc6IDIwcHggMjRweDsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7IH1cXHJcXG5cXHJcXG4ud2FsbGV0LWNhcmQge1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tY2FyZCk7IGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxNnB4OyBwYWRkaW5nOiAxNnB4OyBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiAxMnB4OyBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlOyBwb3NpdGlvbjogcmVsYXRpdmU7IG92ZXJmbG93OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbi53YWxsZXQtY2FyZDpob3ZlciB7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOyBib3JkZXItY29sb3I6IHZhcigtLWJyYW5kKTtcXHJcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTsgYm94LXNoYWRvdzogMCA4cHggMjVweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xcclxcbn1cXHJcXG5cXHJcXG4ud2FsbGV0LWljb24geyBmb250LXNpemU6IDI0cHg7IHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMjsgfVxcclxcbi53YWxsZXQtaW5mbyB7IGZsZXg6IDE7IHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMjsgfVxcclxcbi53YWxsZXQtdGl0bGUgeyBmb250LXNpemU6IDE0cHg7IGZvbnQtd2VpZ2h0OiA2MDA7IGNvbG9yOiB2YXIoLS10ZXh0KTsgbWFyZ2luLWJvdHRvbTogMnB4OyB9XFxyXFxuLndhbGxldC1iYWxhbmNlIHsgZm9udC1zaXplOiAxOHB4OyBmb250LXdlaWdodDogNzAwOyBjb2xvcjogdmFyKC0tYnJhbmQpOyB9XFxyXFxuLndhbGxldC1hcnJvdyB7IGNvbG9yOiB2YXIoLS1tdXRlZCk7IGZvbnQtc2l6ZTogMTZweDsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAyOyB9XFxyXFxuXFxyXFxuLnNpZGViYXItY29udGVudCB7IHBhZGRpbmc6IDIwcHggMDsgfVxcclxcbi5zaWRlYmFyLXNlY3Rpb24geyBtYXJnaW4tYm90dG9tOiAzMnB4OyB9XFxyXFxuXFxyXFxuLnNpZGViYXItc2VjdGlvbi10aXRsZSB7XFxyXFxuICBmb250LXNpemU6IDEycHg7IGZvbnQtd2VpZ2h0OiA3MDA7IGNvbG9yOiB2YXIoLS1tdXRlZCk7XFxyXFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBsZXR0ZXItc3BhY2luZzogMC41cHg7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAxMnB4OyBwYWRkaW5nOiAwIDI0cHg7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLWl0ZW0ge1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiAxMnB4O1xcclxcbiAgcGFkZGluZzogMTJweCAyNHB4OyBjb2xvcjogdmFyKC0tdGV4dCk7IHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXHJcXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7IHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXItaXRlbTpob3ZlciB7IGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7IGNvbG9yOiB2YXIoLS1icmFuZCk7IH1cXHJcXG4uc2lkZWJhci1pdGVtLWljb24geyBmb250LXNpemU6IDE4cHg7IHdpZHRoOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cXHJcXG5cXHJcXG4uc2lkZWJhci1mb290ZXIge1xcclxcbiAgcG9zaXRpb246IHN0aWNreTsgYm90dG9tOiAwOyBiYWNrZ3JvdW5kOiB2YXIoLS1wYW5lbCk7XFxyXFxuICBib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTsgcGFkZGluZzogMjBweCAyNHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhci1hcHAtaW5mbyB7IHRleHQtYWxpZ246IGNlbnRlcjsgfVxcclxcbi5zaWRlYmFyLWFwcC1uYW1lIHsgZm9udC1zaXplOiAxNHB4OyBmb250LXdlaWdodDogNzAwOyBjb2xvcjogdmFyKC0tdGV4dCk7IG1hcmdpbi1ib3R0b206IDJweDsgfVxcclxcbi5zaWRlYmFyLWFwcC12ZXJzaW9uIHsgZm9udC1zaXplOiAxMnB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyB9XFxyXFxuXFxyXFxuLyogPT09IFdBTExFVCBNRU5VID09PSAqL1xcclxcbi53YWxsZXQtb3ZlcmxheSB7XFxyXFxuICBwb3NpdGlvbjogZml4ZWQ7IHRvcDogMDsgbGVmdDogMDsgcmlnaHQ6IDA7IGJvdHRvbTogMDtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC44KTsgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEycHgpO1xcclxcbiAgei1pbmRleDogMTAwMDsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBvcGFjaXR5OiAwOyB2aXNpYmlsaXR5OiBoaWRkZW47IHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XFxyXFxufVxcclxcblxcclxcbi53YWxsZXQtb3ZlcmxheS5vcGVuIHsgb3BhY2l0eTogMTsgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxcclxcblxcclxcbi53YWxsZXQtbWVudSB7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1wYW5lbCk7IGJvcmRlci1yYWRpdXM6IDI0cHg7IGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxuICBib3gtc2hhZG93OiAwIDI0cHggODBweCByZ2JhKDAsIDAsIDAsIDAuNik7IGJhY2tkcm9wLWZpbHRlcjogYmx1cigzMHB4KTtcXHJcXG4gIHdpZHRoOiAxMDAlOyBtYXgtd2lkdGg6IDQyMHB4OyBtYXgtaGVpZ2h0OiA5MHZoOyBvdmVyZmxvdy15OiBhdXRvO1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCkgc2NhbGUoMC45NSk7XFxyXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xcclxcbn1cXHJcXG5cXHJcXG4ud2FsbGV0LW1lbnUub3BlbiB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSBzY2FsZSgxKTsgfVxcclxcblxcclxcbi53YWxsZXQtaGVhZGVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBhZGRpbmc6IDIwcHggMjRweDtcXHJcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyBwb3NpdGlvbjogc3RpY2t5O1xcclxcbiAgdG9wOiAwOyBiYWNrZ3JvdW5kOiB2YXIoLS1wYW5lbCk7IHotaW5kZXg6IDEwO1xcclxcbn1cXHJcXG5cXHJcXG4ud2FsbGV0LWJhY2sge1xcclxcbiAgd2lkdGg6IDM2cHg7IGhlaWdodDogMzZweDsgYm9yZGVyOiBub25lO1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOyBjb2xvcjogdmFyKC0tdGV4dCk7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxMnB4OyBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjsgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTsgZm9udC1zaXplOiAxOHB4OyBtYXJnaW4tcmlnaHQ6IDEycHg7XFxyXFxufVxcclxcblxcclxcbi53YWxsZXQtYmFjazpob3ZlciB7IGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSk7IHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7IH1cXHJcXG5cXHJcXG4ud2FsbGV0LWhlYWRlci10aXRsZSB7IGZvbnQtc2l6ZTogMThweDsgZm9udC13ZWlnaHQ6IDcwMDsgY29sb3I6IHZhcigtLXRleHQpOyBmbGV4OiAxOyB9XFxyXFxuLndhbGxldC1oZWFkZXItc3BhY2VyIHsgd2lkdGg6IDM2cHg7IH1cXHJcXG5cXHJcXG4ud2FsbGV0LWJhbGFuY2Utc2VjdGlvbiB7IHBhZGRpbmc6IDI0cHg7IH1cXHJcXG5cXHJcXG4uYmFsYW5jZS1jYXJkIHtcXHJcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICM2NjdlZWEgMCUsICM3NjRiYTIgMTAwJSk7XFxyXFxuICBib3JkZXItcmFkaXVzOiAyMHB4OyBwYWRkaW5nOiAyNHB4OyBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiAxNnB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IG92ZXJmbG93OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbi5iYWxhbmNlLWljb24geyBmb250LXNpemU6IDMycHg7IGZpbHRlcjogZHJvcC1zaGFkb3coMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4zKSk7IH1cXHJcXG4uYmFsYW5jZS1pbmZvIHsgZmxleDogMTsgY29sb3I6IHdoaXRlOyB9XFxyXFxuLmJhbGFuY2UtbGFiZWwgeyBmb250LXNpemU6IDE0cHg7IGZvbnQtd2VpZ2h0OiA2MDA7IG9wYWNpdHk6IDAuOTsgbWFyZ2luLWJvdHRvbTogNHB4OyB9XFxyXFxuLmJhbGFuY2UtYW1vdW50IHsgZm9udC1zaXplOiAyOHB4OyBmb250LXdlaWdodDogODAwOyBtYXJnaW4tYm90dG9tOiA0cHg7IHRleHQtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjMpOyB9XFxyXFxuLmJhbGFuY2Utc3VidGl0bGUgeyBmb250LXNpemU6IDEycHg7IG9wYWNpdHk6IDAuODsgfVxcclxcblxcclxcbi53YWxsZXQtYWN0aW9ucyB7XFxyXFxuICBkaXNwbGF5OiBncmlkOyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xcclxcbiAgZ2FwOiAxMnB4OyBwYWRkaW5nOiAwIDI0cHggMjRweDtcXHJcXG59XFxyXFxuXFxyXFxuLmFjdGlvbi1idXR0b24ge1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tY2FyZCk7IGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxNnB4OyBwYWRkaW5nOiAxNnB4IDEycHg7IGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBhbGlnbi1pdGVtczogY2VudGVyOyBnYXA6IDhweDtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjsgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTsgY29sb3I6IHZhcigtLXRleHQpO1xcclxcbn1cXHJcXG5cXHJcXG4uYWN0aW9uLWJ1dHRvbjpob3ZlciB7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOyBib3JkZXItY29sb3I6IHZhcigtLWJyYW5kKTtcXHJcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTsgYm94LXNoYWRvdzogMCA4cHggMjVweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xcclxcbn1cXHJcXG5cXHJcXG4uYWN0aW9uLWljb24geyBmb250LXNpemU6IDIwcHg7IH1cXHJcXG4uYWN0aW9uLWJ1dHRvbiBzcGFuIHsgZm9udC1zaXplOiAxMnB4OyBmb250LXdlaWdodDogNjAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cXHJcXG5cXHJcXG4ud2FsbGV0LWNvbnRlbnQgeyBwYWRkaW5nOiAwIDI0cHggMjRweDsgfVxcclxcbi50cmFuc2FjdGlvbnMtc2VjdGlvbiB7IG1hcmdpbi1ib3R0b206IDMycHg7IH1cXHJcXG5cXHJcXG4uc2VjdGlvbi10aXRsZSB7XFxyXFxuICBmb250LXNpemU6IDE2cHg7IGZvbnQtd2VpZ2h0OiA3MDA7IGNvbG9yOiB2YXIoLS10ZXh0KTtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDE2cHg7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGdhcDogOHB4O1xcclxcbn1cXHJcXG5cXHJcXG4udHJhbnNhY3Rpb24tbGlzdCB7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1jYXJkKTsgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7IG92ZXJmbG93OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbi50cmFuc2FjdGlvbi1pdGVtIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBhZGRpbmc6IDE2cHg7XFxyXFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTsgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGVhc2U7XFxyXFxufVxcclxcblxcclxcbi50cmFuc2FjdGlvbi1pdGVtOmxhc3QtY2hpbGQgeyBib3JkZXItYm90dG9tOiBub25lOyB9XFxyXFxuLnRyYW5zYWN0aW9uLWl0ZW06aG92ZXIgeyBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDIpOyB9XFxyXFxuXFxyXFxuLnRyYW5zYWN0aW9uLWljb24ge1xcclxcbiAgd2lkdGg6IDQwcHg7IGhlaWdodDogNDBweDsgYm9yZGVyLXJhZGl1czogMTJweDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgZm9udC1zaXplOiAxOHB4OyBtYXJnaW4tcmlnaHQ6IDEycHg7XFxyXFxufVxcclxcblxcclxcbi50cmFuc2FjdGlvbi1pY29uLmluY29tZSB7IGJhY2tncm91bmQ6IHJnYmEoMzQsIDE5NywgOTQsIDAuMSk7IGNvbG9yOiAjMjJjNTVlOyB9XFxyXFxuLnRyYW5zYWN0aW9uLWljb24uZXhwZW5zZSB7IGJhY2tncm91bmQ6IHJnYmEoMjM5LCA2OCwgNjgsIDAuMSk7IGNvbG9yOiAjZWY0NDQ0OyB9XFxyXFxuXFxyXFxuLnRyYW5zYWN0aW9uLWluZm8geyBmbGV4OiAxOyB9XFxyXFxuLnRyYW5zYWN0aW9uLXRpdGxlIHsgZm9udC1zaXplOiAxNHB4OyBmb250LXdlaWdodDogNjAwOyBjb2xvcjogdmFyKC0tdGV4dCk7IG1hcmdpbi1ib3R0b206IDJweDsgfVxcclxcbi50cmFuc2FjdGlvbi1kYXRlIHsgZm9udC1zaXplOiAxMnB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyB9XFxyXFxuLnRyYW5zYWN0aW9uLWFtb3VudCB7IGZvbnQtc2l6ZTogMTRweDsgZm9udC13ZWlnaHQ6IDcwMDsgfVxcclxcbi50cmFuc2FjdGlvbi1hbW91bnQuaW5jb21lIHsgY29sb3I6ICMyMmM1NWU7IH1cXHJcXG4udHJhbnNhY3Rpb24tYW1vdW50LmV4cGVuc2UgeyBjb2xvcjogI2VmNDQ0NDsgfVxcclxcblxcclxcbi50cmFuc2FjdGlvbnMtbG9hZGluZyB7XFxyXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IHBhZGRpbmc6IDQwcHggMjBweDsgY29sb3I6IHZhcigtLW11dGVkKTtcXHJcXG59XFxyXFxuXFxyXFxuLnRyYW5zYWN0aW9ucy1sb2FkaW5nIC5sb2FkaW5nLXNwaW5uZXIge1xcclxcbiAgZm9udC1zaXplOiAyNHB4OyBtYXJnaW4tYm90dG9tOiAxMnB4OyBhbmltYXRpb246IHNwaW4gMXMgbGluZWFyIGluZmluaXRlO1xcclxcbn1cXHJcXG5cXHJcXG5Aa2V5ZnJhbWVzIHNwaW4geyBmcm9tIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH0gdG8geyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9IH1cXHJcXG5cXHJcXG4udHJhbnNhY3Rpb25zLWVtcHR5IHtcXHJcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgcGFkZGluZzogNDBweCAyMHB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpO1xcclxcbn1cXHJcXG5cXHJcXG4uZW1wdHktaWNvbiB7IGZvbnQtc2l6ZTogMzJweDsgbWFyZ2luLWJvdHRvbTogMTJweDsgfVxcclxcbi5lbXB0eS10ZXh0IHsgZm9udC1zaXplOiAxNnB4OyBmb250LXdlaWdodDogNjAwOyBjb2xvcjogdmFyKC0tdGV4dCk7IG1hcmdpbi1ib3R0b206IDhweDsgfVxcclxcbi5lbXB0eS1oaW50IHsgZm9udC1zaXplOiAxMnB4OyBjb2xvcjogdmFyKC0tbXV0ZWQpOyBsaW5lLWhlaWdodDogMS40OyB9XFxyXFxuXFxyXFxuLnNob3ctYWxsLWJ1dHRvbiB7XFxyXFxuICB3aWR0aDogMTAwJTsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxyXFxuICBjb2xvcjogdmFyKC0tbXV0ZWQpOyBwYWRkaW5nOiAxMnB4OyBib3JkZXItcmFkaXVzOiAxMnB4O1xcclxcbiAgZm9udC1zaXplOiAxNHB4OyBmb250LXdlaWdodDogNjAwOyBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlOyBtYXJnaW4tdG9wOiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uc2hvdy1hbGwtYnV0dG9uOmhvdmVyIHtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7IGNvbG9yOiB2YXIoLS10ZXh0KTsgYm9yZGVyLWNvbG9yOiB2YXIoLS1icmFuZCk7XFxyXFxufVxcclxcblxcclxcbi5wYXltZW50LW1ldGhvZHMtc2VjdGlvbiB7IG1hcmdpbi1ib3R0b206IDI0cHg7IH1cXHJcXG5cXHJcXG4ucGF5bWVudC1tZXRob2Qge1xcclxcbiAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsgcGFkZGluZzogMTZweDtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNhcmQpOyBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMTZweDsgbWFyZ2luLWJvdHRvbTogMTJweDsgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcXHJcXG59XFxyXFxuXFxyXFxuLnBheW1lbnQtbWV0aG9kOmhvdmVyIHtcXHJcXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7IGJvcmRlci1jb2xvcjogdmFyKC0tYnJhbmQpO1xcclxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcHgpO1xcclxcbn1cXHJcXG5cXHJcXG4ucGF5bWVudC1pY29uIHtcXHJcXG4gIHdpZHRoOiA0MHB4OyBoZWlnaHQ6IDQwcHg7IGJvcmRlci1yYWRpdXM6IDEycHg7XFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDEyMywgMTk5LCAyNTUsIDAuMSk7IGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGZvbnQtc2l6ZTogMThweDsgbWFyZ2luLXJpZ2h0OiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4ucGF5bWVudC1pbmZvIHsgZmxleDogMTsgfVxcclxcbi5wYXltZW50LW5hbWUgeyBmb250LXNpemU6IDE0cHg7IGZvbnQtd2VpZ2h0OiA2MDA7IGNvbG9yOiB2YXIoLS10ZXh0KTsgbWFyZ2luLWJvdHRvbTogMnB4OyB9XFxyXFxuLnBheW1lbnQtZGVzYyB7IGZvbnQtc2l6ZTogMTJweDsgY29sb3I6IHZhcigtLW11dGVkKTsgfVxcclxcbi5wYXltZW50LWFycm93IHsgY29sb3I6IHZhcigtLW11dGVkKTsgZm9udC1zaXplOiAxNnB4OyB9XFxyXFxuXFxyXFxuLyogPT09IEJVVFRPTlMgPT09ICovXFxyXFxuLnJvd3sgZGlzcGxheTpmbGV4OyBmbGV4LXdyYXA6d3JhcDsgZ2FwOjEycHg7IG1hcmdpbi10b3A6MjJweDsgfVxcclxcbi5idG57XFxyXFxuICBkaXNwbGF5OmlubGluZS1mbGV4OyBhbGlnbi1pdGVtczpjZW50ZXI7IGdhcDoxMHB4O1xcclxcbiAgcGFkZGluZzoxMnB4IDIwcHg7IGJvcmRlci1yYWRpdXM6MTJweDsgZm9udC13ZWlnaHQ6NjAwOyBmb250LXNpemU6MTVweDtcXHJcXG4gIHRleHQtZGVjb3JhdGlvbjpub25lOyB0cmFuc2l0aW9uOmFsbCAwLjJzIGVhc2U7IGJvcmRlcjpub25lOyBjdXJzb3I6cG9pbnRlcjtcXHJcXG59XFxyXFxuLmJ0bjpkaXNhYmxlZHsgb3BhY2l0eTouNTsgY3Vyc29yOm5vdC1hbGxvd2VkOyB9XFxyXFxuLmJ0bi1wcmltYXJ5e1xcclxcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgdmFyKC0tYnJhbmQpLCB2YXIoLS1hY2NlbnQpKTtcXHJcXG4gIGNvbG9yOiNmZmY7IGJveC1zaGFkb3c6MCA2cHggMjBweCByZ2JhKDEyNSwyMDAsMjU1LC4zKTtcXHJcXG59XFxyXFxuLmJ0bi1wcmltYXJ5OmhvdmVyOm5vdCg6ZGlzYWJsZWQpe1xcclxcbiAgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTJweCk7IGJveC1zaGFkb3c6MCAxMnB4IDM1cHggcmdiYSgxMjUsMjAwLDI1NSwuNCk7XFxyXFxufVxcclxcbi5idG4tZ2hvc3R7XFxyXFxuICBiYWNrZ3JvdW5kOnZhcigtLWNhcmQpOyBjb2xvcjp2YXIoLS10ZXh0KTsgYm9yZGVyOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcclxcbn1cXHJcXG4uYnRuLWdob3N0OmhvdmVyeyBiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsLjA4KTsgY29sb3I6dmFyKC0tYnJhbmQpOyB9XFxyXFxuXFxyXFxuLyogPT09IFRZUE9HUkFQSFkgPT09ICovXFxyXFxuLmgxeyBtYXJnaW46OHB4IDAgMTBweDsgZm9udC1zaXplOiBjbGFtcCgyOHB4LCA1Ljh2dywgNDRweCk7IGxpbmUtaGVpZ2h0OjEuMTsgZm9udC13ZWlnaHQ6OTAwOyB9XFxyXFxuLmxlYWR7IGNvbG9yOnZhcigtLW11dGVkKTsgZm9udC1zaXplOjE2cHg7IG1heC13aWR0aDo1NWNoOyB9XFxyXFxuLmJyYW5keyBkaXNwbGF5OmlubGluZS1mbGV4OyBhbGlnbi1pdGVtczpjZW50ZXI7IGdhcDoxMHB4OyBmb250LXdlaWdodDo4MDA7IGNvbG9yOnZhcigtLW11dGVkKTsgbWFyZ2luLWJvdHRvbToxMHB4OyB9XFxyXFxuLmJhZGdleyBkaXNwbGF5OmlubGluZS1mbGV4OyBhbGlnbi1pdGVtczpjZW50ZXI7IGdhcDo4cHg7IHBhZGRpbmc6NnB4IDEwcHg7IGZvbnQtc2l6ZToxMnB4OyBmb250LXdlaWdodDo3MDA7IGNvbG9yOiMwYjEyMjA7IGJvcmRlci1yYWRpdXM6OTk5cHg7IGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgdmFyKC0tYnJhbmQpLCB2YXIoLS1hY2NlbnQpKTsgfVxcclxcblxcclxcbi8qID09PSBMT0FESU5HID09PSAqL1xcclxcbi5vdmVybGF5eyBwb3NpdGlvbjpmaXhlZDsgdG9wOjA7IGxlZnQ6MDsgcmlnaHQ6MDsgYm90dG9tOjA7IHotaW5kZXg6OTk5OTsgZGlzcGxheTpmbGV4OyBhbGlnbi1pdGVtczpjZW50ZXI7IGp1c3RpZnktY29udGVudDpjZW50ZXI7IGFuaW1hdGlvbjogZmFkZUluIDAuMnMgZWFzZTsgfVxcclxcbi5vdmVybGF5LWJhY2tkcm9weyBwb3NpdGlvbjphYnNvbHV0ZTsgdG9wOjA7IGxlZnQ6MDsgcmlnaHQ6MDsgYm90dG9tOjA7IGJhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjgpOyBiYWNrZHJvcC1maWx0ZXI6Ymx1cigxMnB4KTsgfVxcclxcbi5vdmVybGF5LXBhbmVseyBwb3NpdGlvbjpyZWxhdGl2ZTsgei1pbmRleDoxOyB0ZXh0LWFsaWduOmNlbnRlcjsgYW5pbWF0aW9uOiBzbGlkZVVwIDAuM3MgZWFzZTsgfVxcclxcbi5vdmVybGF5LWhpbnR7IG1hcmdpbi10b3A6MTZweDsgY29sb3I6dmFyKC0tbXV0ZWQpOyBmb250LXNpemU6MTRweDsgfVxcclxcbkBrZXlmcmFtZXMgZmFkZUlueyBmcm9te29wYWNpdHk6MH0gdG97b3BhY2l0eToxfSB9XFxyXFxuQGtleWZyYW1lcyBzbGlkZVVweyBmcm9te29wYWNpdHk6MDsgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoMjBweCl9IHRve29wYWNpdHk6MTsgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoMCl9IH1cXHJcXG5cXHJcXG4uZm9vdHsgbWFyZ2luLXRvcDozMnB4OyBmb250LXNpemU6MTRweDsgY29sb3I6dmFyKC0tbXV0ZWQpOyBsaW5lLWhlaWdodDoxLjU7IH1cXHJcXG4uZm9vdCBheyBjb2xvcjp2YXIoLS1icmFuZCk7IHRleHQtZGVjb3JhdGlvbjpub25lOyB9XFxyXFxuLmZvb3QgYTpob3ZlcnsgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTsgfVxcclxcblxcclxcbi8qID09PSBSRVNQT05TSVZFID09PSAqL1xcclxcbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xcclxcbiAgLmhlcm8geyBwYWRkaW5nOiAxNnB4IDEycHg7IH1cXHJcXG4gIC5ncmlkIHsgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7IGdhcDogMTZweDsgbWFyZ2luLXRvcDogMjRweDsgfVxcclxcbiAgLnRpbGUgeyBwYWRkaW5nOiAyMHB4OyB9XFxyXFxuICAudG9wYmFyLWxlZnQgeyBnYXA6IDhweDsgfVxcclxcbiAgLmhlbGxvLWhpIHsgZm9udC1zaXplOiAxNXB4OyB9XFxyXFxuICAuaGVsbG8tc3ViIHsgZm9udC1zaXplOiAxMnB4OyB9XFxyXFxuICAuYW5ub3VuY2VtZW50cy1zbGlkZXIgeyBoZWlnaHQ6IDI0MHB4OyB9XFxyXFxuICAuYW5ub3VuY2VtZW50LWNhcmQgeyBwYWRkaW5nOiAzMnB4IDIwcHg7IH1cXHJcXG4gIC5hbm5vdW5jZW1lbnQtdGl0bGUgeyBmb250LXNpemU6IDIwcHg7IH1cXHJcXG4gIC5hbm5vdW5jZW1lbnQtdGV4dCB7IGZvbnQtc2l6ZTogMTRweDsgbWF4LXdpZHRoOiAyODBweDsgfVxcclxcbiAgLnNpZGViYXIgeyB3aWR0aDogMjgwcHg7IH1cXHJcXG4gIC5zaWRlYmFyLWhlYWRlciB7IHBhZGRpbmc6IDE2cHggMjBweDsgfVxcclxcbiAgLnNpZGViYXItd2FsbGV0IHsgcGFkZGluZzogMTZweCAyMHB4OyB9XFxyXFxuICAuc2lkZWJhci1zZWN0aW9uLXRpdGxlIHsgcGFkZGluZzogMCAyMHB4OyB9XFxyXFxuICAuc2lkZWJhci1pdGVtIHsgcGFkZGluZzogMTJweCAyMHB4OyB9XFxyXFxuICAuc2lkZWJhci1mb290ZXIgeyBwYWRkaW5nOiAxNnB4IDIwcHg7IH1cXHJcXG4gIC53YWxsZXQtb3ZlcmxheSB7IHBhZGRpbmc6IDE2cHg7IH1cXHJcXG4gIC53YWxsZXQtbWVudSB7IGJvcmRlci1yYWRpdXM6IDIwcHg7IG1heC1oZWlnaHQ6IDk1dmg7IH1cXHJcXG4gIC53YWxsZXQtaGVhZGVyIHsgcGFkZGluZzogMTZweCAyMHB4OyB9XFxyXFxuICAud2FsbGV0LWJhbGFuY2Utc2VjdGlvbiB7IHBhZGRpbmc6IDIwcHg7IH1cXHJcXG4gIC5iYWxhbmNlLWNhcmQgeyBwYWRkaW5nOiAyMHB4OyB9XFxyXFxuICAuYmFsYW5jZS1hbW91bnQgeyBmb250LXNpemU6IDI0cHg7IH1cXHJcXG4gIC53YWxsZXQtYWN0aW9ucyB7IHBhZGRpbmc6IDAgMjBweCAyMHB4OyBnYXA6IDEwcHg7IH1cXHJcXG4gIC5hY3Rpb24tYnV0dG9uIHsgcGFkZGluZzogMTRweCAxMHB4OyB9XFxyXFxuICAuYWN0aW9uLWljb24geyBmb250LXNpemU6IDE4cHg7IH1cXHJcXG4gIC5hY3Rpb24tYnV0dG9uIHNwYW4geyBmb250LXNpemU6IDExcHg7IH1cXHJcXG4gIC53YWxsZXQtY29udGVudCB7IHBhZGRpbmc6IDAgMjBweCAyMHB4OyB9XFxyXFxuICAudHJhbnNhY3Rpb24taXRlbSB7IHBhZGRpbmc6IDE0cHg7IH1cXHJcXG4gIC5wYXltZW50LW1ldGhvZCB7IHBhZGRpbmc6IDE0cHg7IH1cXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[14].use[2]!./styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLG9OQUF3RztBQUMxSCwwQkFBMEIsbUJBQU8sQ0FBQywyZUFBaVA7O0FBRW5SOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSwyZUFBaVA7QUFDdlA7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQywyZUFBaVA7O0FBRTNROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLmNzcz9hMmMxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxNF0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxNF0udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzE0XS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTRdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTRdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ App; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction App(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n        ...pageProps\n    }, void 0, false, {\n        fileName: \"D:\\\\dont delete\\\\pages\\\\_app.js\",\n        lineNumber: 3,\n        columnNumber: 10\n    }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQjtBQUNoQixTQUFTQSxJQUFJLEtBQXdCO1FBQXhCLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFLEdBQXhCO0lBQzFCLHFCQUFPLDhEQUFDRDtRQUFXLEdBQUdDLFNBQVM7Ozs7OztBQUNqQztLQUZ3QkYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbHMuY3NzJztcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkge1xyXG4gIHJldHVybiA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+O1xyXG59Il0sIm5hbWVzIjpbIkFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);